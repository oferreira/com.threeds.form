{"version":3,"sources":["Config.ts","Locale.ts","Parameters.ts","Core/String.ts","Element/AbstractPolymerElement.js","Element/AbstractPolymerElement.ts","I18n/Translator.ts","I18n/Translator.js","Plugin/AbstractPlugin.ts","Validator/AbstractValidator.ts","Validator/Email.js","Validator/Email.ts","Validator/Require.js","Validator/Require.ts","Service/ServiceManager.ts","Service/Adapter/AbstractAdapter.ts","Service/Adapter/Exalead.js","Service/Adapter/Exalead.ts","Component/Form/Element/Input.js","app.js","Component/Form/Element/Input.ts","Component/Form/Element/Textarea.js","Component/Form/Element/Textarea.ts","Component/Form/Element/Checkbox.js","Component/Form/Element/Checkbox.ts","Component/Form/Element/Radio.js","Component/Form/Element/Radio.ts","Component/Form/Element/Select.js","Component/Form/Element/Select.ts","Component/Form/Element/FieldGroup.js","Component/Form/Element/FieldGroup.ts","Component/Form/Element/Field.js","Component/Form/Element/Field.ts","Component/Form/Element/Submit.js","Component/Form/Element/Submit.ts","Component/Form/Element/Step.js","Component/Form/Element/Step.ts","Core/Ajax/AutoComplete.js","Core/Ajax/AutoComplete.ts","Component/Form/Element/Behavior/Neolane/FormBehavior.js","Component/Form/Element/Behavior/Neolane/FormBehavior.ts","Component/Form/Element/Form.js","Component/Form/Element/Form.ts","Component/Form/Plugin.js","Component/Form/Plugin.ts","Component/LandingPage/Plugin.js","Component/LandingPage/Plugin.ts","Service/Adapter/Neolane.js","Service/Adapter/Neolane.ts","Component/Form/Element/Option.js","Component/Form/Element/Option.ts"],"names":["$","addEventListener","Com","Threeds","_config","form","id","adapter","url","_locale","en","error","field_invalid","field_require","email_invalid","checkbox_require","fr","_parameters","translator","lang","String","format","formatted","this","i","arguments","length","regexp","RegExp","replace","__extends","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","Element","AbstractPolymerElement","_super","data","call","polymer","Base","I18n","Translator","options","defineProperty","get","undefined","_instance","find","enumerable","configurable","t","key","eval","i18n","instance","o","s","a","split","n","k","Plugin","AbstractPlugin","elem","settings","extend","render","type","service","name","Validator","AbstractValidator","Email","apply","isValid","value","test","Require","Service","ServiceManager","charAt","toUpperCase","slice","fn","Adapter","AbstractAdapter","Exalead","cards","context","encodeURIComponent","query","limit","offset","ajax","dataType","success","resultat","statut","erreur","groups","customGroups","__decorate","decorators","target","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","Component","Form","Input","required","_validators","_errorMessage","classList","add","display","placeholder","label","validators","set","_onChange","e","fire","setAttribute","message","displayError","detail","errorMessage","remove","property","reflectToAttribute","Boolean","listen","component","register","Textarea","Checkbox","checked","toString","removeAttribute","Radio","Select","parentField","update","clear","Polymer","dom","firstChild","removeChild","innerHTML","document","querySelector","selected","parentValue","selectedIndex","appendChild","Option","selectOption","node","FieldGroup","createElement","className","innerText","container","items","Field","hydrateValidators","append","htmlFor","createTextNode","styling","suffixe","mandatory","toLowerCase","FieldGroupElement","insertBefore","console","log","push","handleError","handleHide","status","template","Submit","SubmitElement","Step","result","config","nextAction","Core","Ajax","AutoComplete","api","serviceName","select","Behavior","Neolane","FormBehavior","action","isDefined","properties","displayThankYou","thankYouPage","openUrl","redirect","asset","content","warning","errors","fields","_onCreate","_onSubmit","preventDefault","submit","valid","keys","post","serialize","dispatch","obj","prop","parts","l","part","isEmpty","Form_1","StepElement","_currentPosition","_steps","_errors","hook","setCurrentPosition","behaviors","currentPosition","goTo","prev","next","title","window","location","nodeName","j","dict","elements","behavior","namespace","LandingPage","steps","0","button","1","thankyou","callback","landingPage","self","response","customerAutocomplete","iso","reponse","clean","hydrate","values","labelChanged","newValue","oldValue","ready","observe"],"mappings":"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","file":"app.js","sourcesContent":["namespace Com.Threeds {\n    export var _config = {\n        form: {\n            id: '32f91ef071fe9e8974f3e6468c36312d',\n            adapter: 'Com.Threeds.Service.Adapter.Neolane',\n            url: 'http://dassault-dev.neolane.net/dsx/lp_api.jssp',\n        }\n    };\n}","namespace Com.Threeds {\n    export var _locale = {\n        'en': {\n            'error': {\n                'field_invalid':`The field \"{0}\" is invalid`,\n                'field_require':'This field is required',\n                'email_invalid':'A valid email address is required',\n                'checkbox_require':'Please select the check box',\n            },\n        },\n        'fr': {}\n    };\n}\n","namespace Com.Threeds {\n    export var _parameters = {\n        'translator': {\n            'lang': 'en',\n            'adapter': 'Com.Threeds._locale',\n        }\n    };\n}","String.format = function ():string {\n    var formatted = this;\n    for (var i = 0; i < arguments.length; i++) {\n        var regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\n        formatted = formatted.replace(regexp, arguments[i]);\n    }\n    return formatted;\n}","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Element;\n        (function (Element) {\n            var AbstractPolymerElement = (function (_super) {\n                __extends(AbstractPolymerElement, _super);\n                function AbstractPolymerElement(data) {\n                    _super.call(this);\n                }\n                return AbstractPolymerElement;\n            }(polymer.Base));\n            Element.AbstractPolymerElement = AbstractPolymerElement;\n        })(Element = Threeds.Element || (Threeds.Element = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\n","/// <reference path=\"../../bower_components/polymer-ts/polymer-ts.d.ts\"/>\n/// <reference path=\"../../typings/jquery/jquery.d.ts\" />\n\nnamespace Com.Threeds.Element {\n\n    export class AbstractPolymerElement extends polymer.Base {\n        data:any;\n\n        constructor(data:any) {\n            super();\n        }\n\n\n    }\n}\n\n","/// <reference path=\"../../typings/jquery/jquery.d.ts\" />\n/// <reference path=\"../Parameters.ts\" />\n\nnamespace Com.Threeds.I18n {\n\n    export class Translator {\n\n        public static _instance:Translator;\n\n        private lang:string;\n        private adapter:string;\n\n        constructor(options:any) {\n            this.lang = options.lang;\n            this.adapter = options.adapter;\n        }\n\n        public static get instance():Com.Threeds.I18n.Translator {\n            if (Translator._instance == undefined) {\n                Translator._instance = new Com.Threeds.I18n.Translator(Object.find(Com.Threeds._parameters, 'translator'));\n            }\n\n            return Translator._instance;\n        }\n\n        public t(key:string):string {\n            return Object.find(eval(this.adapter), `${this.lang}.${key}`);\n        }\n    }\n\n    $.i18n = function () {\n        return Com.Threeds.I18n.Translator.instance;\n    };\n}\n\n\nObject.find = function (o:any, s:string):boolean {\n    s = s.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\n    s = s.replace(/^\\./, '');           // strip a leading dot\n    var a = s.split('.');\n    for (var i = 0, n = a.length; i < n; ++i) {\n        var k = a[i];\n        if (k in o) {\n            o = o[k];\n        } else {\n            return;\n        }\n    }\n    return o;\n}","var Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var I18n;\n        (function (I18n) {\n            var Translator = (function () {\n                function Translator(options) {\n                    this.lang = options.lang;\n                    this.adapter = options.adapter;\n                }\n                Object.defineProperty(Translator, \"instance\", {\n                    get: function () {\n                        if (Translator._instance == undefined) {\n                            Translator._instance = new Com.Threeds.I18n.Translator(Object.find(Com.Threeds._parameters, 'translator'));\n                        }\n                        return Translator._instance;\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Translator.prototype.t = function (key) {\n                    return Object.find(eval(this.adapter), this.lang + \".\" + key);\n                };\n                return Translator;\n            }());\n            I18n.Translator = Translator;\n            $.i18n = function () {\n                return Com.Threeds.I18n.Translator.instance;\n            };\n        })(I18n = Threeds.I18n || (Threeds.I18n = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nObject.find = function (o, s) {\n    s = s.replace(/\\[(\\w+)\\]/g, '.$1');\n    s = s.replace(/^\\./, '');\n    var a = s.split('.');\n    for (var i = 0, n = a.length; i < n; ++i) {\n        var k = a[i];\n        if (k in o) {\n            o = o[k];\n        }\n        else {\n            return;\n        }\n    }\n    return o;\n};\n","/// <reference path=\"../../typings/jquery/jquery.d.ts\" />\n\n\ninterface Document {\n    registerElement(tagName:string, implementation:any):any;\n}\n\ninterface JQuery {\n    always(data?:any, options?:any): JQuery;\n    done(data?:any, options?:any): JQuery;\n    fail(data?:any, options?:any): JQuery;\n    progress(data?:any, options?:any): JQuery;\n}\n\nnamespace Com.Threeds.Plugin {\n\n    export class AbstractPlugin {\n\n        public elem:any;\n        public settings:any = {};\n\n        constructor(elem:any, options:Object) {\n            this.elem = elem;\n            this.settings = $.extend({}, this.settings, options);\n        }\n\n        render(type:string, data:any):void {\n            return eval(`new ${this.settings.render.adapter}()`)[type](this, data);\n        }\n\n        service(name:string):any {\n            return eval('new ' + this.settings[name].adapter);\n        }\n    }\n}\n\n","namespace Com.Threeds.Validator {\n\n    export class AbstractValidator {\n\n\n    }\n}\n","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Validator;\n        (function (Validator) {\n            var AbstractValidator = Com.Threeds.Validator.AbstractValidator;\n            var Email = (function (_super) {\n                __extends(Email, _super);\n                function Email() {\n                    _super.apply(this, arguments);\n                }\n                Email.isValid = function (value) {\n                    if (!/^(.+@.+\\..{2,4})$/.test(value)) {\n                        return $.i18n().t('error.email_invalid');\n                    }\n                    return true;\n                };\n                return Email;\n            }(AbstractValidator));\n            Validator.Email = Email;\n        })(Validator = Threeds.Validator || (Threeds.Validator = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\n","/// <reference path=\"../../typings/jquery/jquery.d.ts\" />\n/// <reference path=\"../Validator/AbstractValidator.ts\" />\n\nnamespace Com.Threeds.Validator {\n\n    import AbstractValidator = Com.Threeds.Validator.AbstractValidator;\n\n    export class Email extends AbstractValidator {\n\n        static isValid(value:string):boolean|string {\n            if (!/^(.+@.+\\..{2,4})$/.test(value)) {\n                return $.i18n().t('error.email_invalid');\n            }\n\n            return true;\n        }\n\n    }\n}","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Validator;\n        (function (Validator) {\n            var AbstractValidator = Com.Threeds.Validator.AbstractValidator;\n            var Require = (function (_super) {\n                __extends(Require, _super);\n                function Require() {\n                    _super.apply(this, arguments);\n                }\n                Require.isValid = function (value) {\n                    if (value == '' || value == undefined) {\n                        return $.i18n().t('error.field_require');\n                    }\n                    return true;\n                };\n                return Require;\n            }(AbstractValidator));\n            Validator.Require = Require;\n        })(Validator = Threeds.Validator || (Threeds.Validator = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\n","/// <reference path=\"../../typings/jquery/jquery.d.ts\" />\n/// <reference path=\"../Validator/AbstractValidator.ts\" />\n\nnamespace Com.Threeds.Validator {\n\n    import AbstractValidator = Com.Threeds.Validator.AbstractValidator;\n\n    export class Require extends AbstractValidator {\n\n        static isValid(value:string):boolean|string {\n            if (value == '' || value == undefined) {\n                return $.i18n().t('error.field_require');\n            }\n\n            return true;\n        }\n\n    }\n}","/// <reference path=\"../../typings/jquery/jquery.d.ts\" />\n\nnamespace Com.Threeds.Service {\n\n    export class ServiceManager {\n        instance:ServiceManager;\n\n        constructor() {\n            if(typeof ServiceManager.prototype.instance === 'undefined'){\n\n            }\n        }\n\n        public get(name:String){\n            return eval('new Service.' + name.charAt(0).toUpperCase() + name.slice(1));\n         }\n    }\n\n    $.fn.service = function (name:String) {\n        return (new ServiceManager()).get(name);\n    };\n}\n\n","\nnamespace Com.Threeds.Service.Adapter {\n\n    export class AbstractAdapter {\n\n\n    }\n}\n","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Service;\n        (function (Service) {\n            var Adapter;\n            (function (Adapter) {\n                var AbstractAdapter = Com.Threeds.Service.Adapter.AbstractAdapter;\n                var Exalead = (function (_super) {\n                    __extends(Exalead, _super);\n                    function Exalead() {\n                        _super.apply(this, arguments);\n                    }\n                    Exalead.prototype.cards = function (context, options) {\n                        var query = encodeURIComponent(options.query);\n                        var offset = (options.limit * options.offset);\n                        var limit = options.limit;\n                        $.ajax({\n                            type: \"GET\",\n                            dataType: \"json\", url: 'data/customer-story.json',\n                            success: function (data) {\n                                context.render('cards', data);\n                            },\n                            error: function (resultat, statut, erreur) {\n                                context.render('cards', false);\n                            }\n                        });\n                    };\n                    Exalead.prototype.groups = function (context, options) {\n                        $.ajax({\n                            type: \"GET\",\n                            dataType: \"json\", url: 'data/groups.json',\n                            success: function (data) {\n                                context.render('groups', data);\n                            },\n                            error: function (resultat, statut, erreur) {\n                                context.render('groups', false);\n                            }\n                        });\n                    };\n                    Exalead.prototype.customGroups = function (context, options) {\n                        $.ajax({\n                            type: \"GET\",\n                            dataType: \"json\", url: 'data/custom-groups.json',\n                            success: function (data) {\n                                context.render('customGroups', data);\n                            },\n                            error: function (resultat, statut, erreur) {\n                                context.render('customGroups', false);\n                            }\n                        });\n                    };\n                    return Exalead;\n                }(AbstractAdapter));\n                Adapter.Exalead = Exalead;\n            })(Adapter = Service.Adapter || (Service.Adapter = {}));\n        })(Service = Threeds.Service || (Threeds.Service = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\n","/// <reference path=\"../../../typings/jquery/jquery.d.ts\" />\n/// <reference path=\"../../Service/Adapter/AbstractAdapter.ts\" />\n\n\nnamespace Com.Threeds.Service.Adapter {\n\n    import AbstractAdapter = Com.Threeds.Service.Adapter.AbstractAdapter;\n\n    export class Exalead extends AbstractAdapter {\n\n        cards(context:any, options:any):void {\n            let query = encodeURIComponent(options.query);\n            let offset = (options.limit * options.offset);\n            let limit = options.limit;\n\n            $.ajax({\n                type: \"GET\",\n                //dataType: \"jsonp\",url: `${options.url}search-api/search?q=${query}&applicationId=default&b=${offset}&hf=${limit}&d=all&output_format=json`,\n                dataType: \"json\",url: 'data/customer-story.json',\n                //dataType: \"json\",url: 'data/events.json',\n                //dataType: \"json\",url: 'data/debug.json',\n                //dataType: \"json\",url: 'data/videos.json',\n                //dataType: \"json\",url: 'data/cards.json',\n                success: function (data:any) {\n                    context.render('cards', data);\n                },\n                error: function (resultat:any, statut:any, erreur:any) {\n                    context.render('cards', false);\n                }\n            });\n        }\n\n        groups(context:any, options:any):void {\n            $.ajax({\n                type: \"GET\",\n                //dataType: \"jsonp\",url: `${options.url}search-api/search?q=%23all&applicationId=default&b=0&hf=0&d=all&output_format=json`,\n                dataType: \"json\",url: 'data/groups.json',\n                success: function (data:any) {\n                    context.render('groups', data);\n                },\n                error: function (resultat:any, statut:any, erreur:any) {\n                    context.render('groups', false);\n                }\n            });\n        }\n\n        customGroups(context:any, options:any):void {\n            $.ajax({\n                type: \"GET\",\n                dataType: \"json\",url: 'data/custom-groups.json',\n                success: function (data:any) {\n                    context.render('customGroups', data);\n                },\n                error: function (resultat:any, statut:any, erreur:any) {\n                    context.render('customGroups', false);\n                }\n            });\n        }\n\n\n    }\n}\n","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var Form;\n            (function (Form) {\n                var Element;\n                (function (Element) {\n                    var AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n                    var Input = (function (_super) {\n                        __extends(Input, _super);\n                        function Input(context, data) {\n                            _super.call(this, data);\n                            this.type = 'text';\n                            this.value = 'lorem@lorem.fr';\n                            this.required = false;\n                            this._validators = [];\n                            this._errorMessage = '';\n                            if (data.type != undefined && data.type != 'hidden')\n                                this.classList.add('form-control');\n                            if (context.settings.display.placeholder)\n                                this.placeholder = data.label;\n                            if (data.name != undefined)\n                                this.id = data.name, this.name = data.name;\n                            if (data.required != undefined)\n                                this.required = data.required;\n                            if (data.type != undefined)\n                                this.type = data.type;\n                            if (data.value != undefined)\n                                this.value = data.value;\n                            if (data.validators != undefined)\n                                this._validators = data.validators;\n                        }\n                        Object.defineProperty(Input.prototype, \"errorMessage\", {\n                            get: function () {\n                                return (this._errorMessage == undefined ? '' : this._errorMessage);\n                            },\n                            set: function (value) {\n                                this._errorMessage = (value == undefined ? '' : value);\n                            },\n                            enumerable: true,\n                            configurable: true\n                        });\n                        Input.prototype._onChange = function (e) {\n                            this.fire('field-value-changed', this);\n                            this.setAttribute('value', this.value);\n                            this.isValid();\n                        };\n                        Input.prototype.isValid = function () {\n                            var message;\n                            for (var i = 0; i < this._validators.length; i++) {\n                                message = eval(this._validators[i] + \".isValid(this.value)\");\n                                if (typeof message == 'string') {\n                                    return this.displayError(message);\n                                }\n                            }\n                            return this.displayError();\n                        };\n                        Input.prototype.displayError = function (detail) {\n                            this.errorMessage = detail;\n                            this.fire('error', this.errorMessage);\n                            if (!this.errorMessage) {\n                                this.classList.remove('_error');\n                                return false;\n                            }\n                            this.classList.add('_error');\n                            return true;\n                        };\n                        __decorate([\n                            property({ type: String, reflectToAttribute: true })\n                        ], Input.prototype, \"type\", void 0);\n                        __decorate([\n                            property({ type: String, reflectToAttribute: true })\n                        ], Input.prototype, \"id\", void 0);\n                        __decorate([\n                            property({ type: String, reflectToAttribute: true })\n                        ], Input.prototype, \"name\", void 0);\n                        __decorate([\n                            property({ type: String })\n                        ], Input.prototype, \"value\", void 0);\n                        __decorate([\n                            property({ type: String, reflectToAttribute: true })\n                        ], Input.prototype, \"placeholder\", void 0);\n                        __decorate([\n                            property({ type: Boolean, reflectToAttribute: true })\n                        ], Input.prototype, \"required\", void 0);\n                        __decorate([\n                            listen('input')\n                        ], Input.prototype, \"_onChange\", null);\n                        Input = __decorate([\n                            component('input-element'),\n                            extend(\"input\")\n                        ], Input);\n                        return Input;\n                    }(AbstractPolymerElement));\n                    Element.Input = Input;\n                })(Element = Form.Element || (Form.Element = {}));\n            })(Form = Component.Form || (Component.Form = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nCom.Threeds.Component.Form.Element.Input.register();\n","$(function () {addEventListener('WebComponentsReady', function () {\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        Threeds._config = {\n            form: {\n                id: '32f91ef071fe9e8974f3e6468c36312d',\n                adapter: 'Com.Threeds.Service.Adapter.Neolane',\n                url: 'http://dassault-dev.neolane.net/dsx/lp_api.jssp'\n            }\n        };\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        Threeds._locale = {\n            'en': {\n                'error': {\n                    'field_invalid': \"The field \\\"{0}\\\" is invalid\",\n                    'field_require': 'This field is required',\n                    'email_invalid': 'A valid email address is required',\n                    'checkbox_require': 'Please select the check box'\n                }\n            },\n            'fr': {}\n        };\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        Threeds._parameters = {\n            'translator': {\n                'lang': 'en',\n                'adapter': 'Com.Threeds._locale'\n            }\n        };\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nString.format = function () {\n    var formatted = this;\n    for (var i = 0; i < arguments.length; i++) {\n        var regexp = new RegExp('\\\\{' + i + '\\\\}', 'gi');\n        formatted = formatted.replace(regexp, arguments[i]);\n    }\n    return formatted;\n};\nvar __extends = this && this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Element;\n        (function (Element) {\n            var AbstractPolymerElement = function (_super) {\n                __extends(AbstractPolymerElement, _super);\n                function AbstractPolymerElement(data) {\n                    _super.call(this);\n                }\n                return AbstractPolymerElement;\n            }(polymer.Base);\n            Element.AbstractPolymerElement = AbstractPolymerElement;\n        })(Element = Threeds.Element || (Threeds.Element = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var I18n;\n        (function (I18n) {\n            var Translator = function () {\n                function Translator(options) {\n                    this.lang = options.lang;\n                    this.adapter = options.adapter;\n                }\n                Object.defineProperty(Translator, \"instance\", {\n                    get: function () {\n                        if (Translator._instance == undefined) {\n                            Translator._instance = new Com.Threeds.I18n.Translator(Object.find(Com.Threeds._parameters, 'translator'));\n                        }\n                        return Translator._instance;\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Translator.prototype.t = function (key) {\n                    return Object.find(eval(this.adapter), this.lang + \".\" + key);\n                };\n                return Translator;\n            }();\n            I18n.Translator = Translator;\n            $.i18n = function () {\n                return Com.Threeds.I18n.Translator.instance;\n            };\n        })(I18n = Threeds.I18n || (Threeds.I18n = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nObject.find = function (o, s) {\n    s = s.replace(/\\[(\\w+)\\]/g, '.$1');\n    s = s.replace(/^\\./, '');\n    var a = s.split('.');\n    for (var i = 0, n = a.length; i < n; ++i) {\n        var k = a[i];\n        if (k in o) {\n            o = o[k];\n        } else {\n            return;\n        }\n    }\n    return o;\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Plugin;\n        (function (Plugin) {\n            var AbstractPlugin = function () {\n                function AbstractPlugin(elem, options) {\n                    this.settings = {};\n                    this.elem = elem;\n                    this.settings = $.extend({}, this.settings, options);\n                }\n                AbstractPlugin.prototype.render = function (type, data) {\n                    return eval(\"new \" + this.settings.render.adapter + \"()\")[type](this, data);\n                };\n                AbstractPlugin.prototype.service = function (name) {\n                    return eval('new ' + this.settings[name].adapter);\n                };\n                return AbstractPlugin;\n            }();\n            Plugin.AbstractPlugin = AbstractPlugin;\n        })(Plugin = Threeds.Plugin || (Threeds.Plugin = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Validator;\n        (function (Validator) {\n            var AbstractValidator = function () {\n                function AbstractValidator() {}\n                return AbstractValidator;\n            }();\n            Validator.AbstractValidator = AbstractValidator;\n        })(Validator = Threeds.Validator || (Threeds.Validator = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nvar __extends = this && this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Validator;\n        (function (Validator) {\n            var AbstractValidator = Com.Threeds.Validator.AbstractValidator;\n            var Email = function (_super) {\n                __extends(Email, _super);\n                function Email() {\n                    _super.apply(this, arguments);\n                }\n                Email.isValid = function (value) {\n                    if (!/^(.+@.+\\..{2,4})$/.test(value)) {\n                        return $.i18n().t('error.email_invalid');\n                    }\n                    return true;\n                };\n                return Email;\n            }(AbstractValidator);\n            Validator.Email = Email;\n        })(Validator = Threeds.Validator || (Threeds.Validator = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nvar __extends = this && this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Validator;\n        (function (Validator) {\n            var AbstractValidator = Com.Threeds.Validator.AbstractValidator;\n            var Require = function (_super) {\n                __extends(Require, _super);\n                function Require() {\n                    _super.apply(this, arguments);\n                }\n                Require.isValid = function (value) {\n                    if (value == '' || value == undefined) {\n                        return $.i18n().t('error.field_require');\n                    }\n                    return true;\n                };\n                return Require;\n            }(AbstractValidator);\n            Validator.Require = Require;\n        })(Validator = Threeds.Validator || (Threeds.Validator = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Service;\n        (function (Service) {\n            var ServiceManager = function () {\n                function ServiceManager() {\n                    if (typeof ServiceManager.prototype.instance === 'undefined') {}\n                }\n                ServiceManager.prototype.get = function (name) {\n                    return eval('new Service.' + name.charAt(0).toUpperCase() + name.slice(1));\n                };\n                return ServiceManager;\n            }();\n            Service.ServiceManager = ServiceManager;\n            $.fn.service = function (name) {\n                return new ServiceManager().get(name);\n            };\n        })(Service = Threeds.Service || (Threeds.Service = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Service;\n        (function (Service) {\n            var Adapter;\n            (function (Adapter) {\n                var AbstractAdapter = function () {\n                    function AbstractAdapter() {}\n                    return AbstractAdapter;\n                }();\n                Adapter.AbstractAdapter = AbstractAdapter;\n            })(Adapter = Service.Adapter || (Service.Adapter = {}));\n        })(Service = Threeds.Service || (Threeds.Service = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nvar __extends = this && this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Service;\n        (function (Service) {\n            var Adapter;\n            (function (Adapter) {\n                var AbstractAdapter = Com.Threeds.Service.Adapter.AbstractAdapter;\n                var Exalead = function (_super) {\n                    __extends(Exalead, _super);\n                    function Exalead() {\n                        _super.apply(this, arguments);\n                    }\n                    Exalead.prototype.cards = function (context, options) {\n                        var query = encodeURIComponent(options.query);\n                        var offset = options.limit * options.offset;\n                        var limit = options.limit;\n                        $.ajax({\n                            type: \"GET\",\n                            dataType: \"json\", url: 'data/customer-story.json',\n                            success: function (data) {\n                                context.render('cards', data);\n                            },\n                            error: function (resultat, statut, erreur) {\n                                context.render('cards', false);\n                            }\n                        });\n                    };\n                    Exalead.prototype.groups = function (context, options) {\n                        $.ajax({\n                            type: \"GET\",\n                            dataType: \"json\", url: 'data/groups.json',\n                            success: function (data) {\n                                context.render('groups', data);\n                            },\n                            error: function (resultat, statut, erreur) {\n                                context.render('groups', false);\n                            }\n                        });\n                    };\n                    Exalead.prototype.customGroups = function (context, options) {\n                        $.ajax({\n                            type: \"GET\",\n                            dataType: \"json\", url: 'data/custom-groups.json',\n                            success: function (data) {\n                                context.render('customGroups', data);\n                            },\n                            error: function (resultat, statut, erreur) {\n                                context.render('customGroups', false);\n                            }\n                        });\n                    };\n                    return Exalead;\n                }(AbstractAdapter);\n                Adapter.Exalead = Exalead;\n            })(Adapter = Service.Adapter || (Service.Adapter = {}));\n        })(Service = Threeds.Service || (Threeds.Service = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nvar __extends = this && this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n    var c = arguments.length,\n        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n        d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var Form;\n            (function (Form) {\n                var Element;\n                (function (Element) {\n                    var AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n                    var Input = function (_super) {\n                        __extends(Input, _super);\n                        function Input(context, data) {\n                            _super.call(this, data);\n                            this.type = 'text';\n                            this.value = 'lorem@lorem.fr';\n                            this.required = false;\n                            this._validators = [];\n                            this._errorMessage = '';\n                            if (data.type != undefined && data.type != 'hidden') this.classList.add('form-control');\n                            if (context.settings.display.placeholder) this.placeholder = data.label;\n                            if (data.name != undefined) this.id = data.name, this.name = data.name;\n                            if (data.required != undefined) this.required = data.required;\n                            if (data.type != undefined) this.type = data.type;\n                            if (data.value != undefined) this.value = data.value;\n                            if (data.validators != undefined) this._validators = data.validators;\n                        }\n                        Object.defineProperty(Input.prototype, \"errorMessage\", {\n                            get: function () {\n                                return this._errorMessage == undefined ? '' : this._errorMessage;\n                            },\n                            set: function (value) {\n                                this._errorMessage = value == undefined ? '' : value;\n                            },\n                            enumerable: true,\n                            configurable: true\n                        });\n                        Input.prototype._onChange = function (e) {\n                            this.fire('field-value-changed', this);\n                            this.setAttribute('value', this.value);\n                            this.isValid();\n                        };\n                        Input.prototype.isValid = function () {\n                            var message;\n                            for (var i = 0; i < this._validators.length; i++) {\n                                message = eval(this._validators[i] + \".isValid(this.value)\");\n                                if (typeof message == 'string') {\n                                    return this.displayError(message);\n                                }\n                            }\n                            return this.displayError();\n                        };\n                        Input.prototype.displayError = function (detail) {\n                            this.errorMessage = detail;\n                            this.fire('error', this.errorMessage);\n                            if (!this.errorMessage) {\n                                this.classList.remove('_error');\n                                return false;\n                            }\n                            this.classList.add('_error');\n                            return true;\n                        };\n                        __decorate([property({ type: String, reflectToAttribute: true })], Input.prototype, \"type\", void 0);\n                        __decorate([property({ type: String, reflectToAttribute: true })], Input.prototype, \"id\", void 0);\n                        __decorate([property({ type: String, reflectToAttribute: true })], Input.prototype, \"name\", void 0);\n                        __decorate([property({ type: String })], Input.prototype, \"value\", void 0);\n                        __decorate([property({ type: String, reflectToAttribute: true })], Input.prototype, \"placeholder\", void 0);\n                        __decorate([property({ type: Boolean, reflectToAttribute: true })], Input.prototype, \"required\", void 0);\n                        __decorate([listen('input')], Input.prototype, \"_onChange\", null);\n                        Input = __decorate([component('input-element'), extend(\"input\")], Input);\n                        return Input;\n                    }(AbstractPolymerElement);\n                    Element.Input = Input;\n                })(Element = Form.Element || (Form.Element = {}));\n            })(Form = Component.Form || (Component.Form = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nCom.Threeds.Component.Form.Element.Input.register();\nvar __extends = this && this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n    var c = arguments.length,\n        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n        d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var Form;\n            (function (Form) {\n                var Element;\n                (function (Element) {\n                    var AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n                    var Textarea = function (_super) {\n                        __extends(Textarea, _super);\n                        function Textarea(context, data) {\n                            _super.call(this, data);\n                            this.value = 'lorem';\n                            this.required = false;\n                            this._validators = [];\n                            this._errorMessage = '';\n                            this.classList.add('form-control');\n                            if (context.settings.display.placeholder) this.placeholder = data.label;\n                            if (data.name != undefined) this.id = data.name, this.name = data.name;\n                            if (data.required != undefined) this.required = data.required;\n                            if (data.value != undefined) this.value = data.value;\n                            if (data.validators != undefined) this._validators = data.validators;\n                        }\n                        Object.defineProperty(Textarea.prototype, \"errorMessage\", {\n                            get: function () {\n                                return this._errorMessage == undefined ? '' : this._errorMessage;\n                            },\n                            set: function (value) {\n                                this._errorMessage = value == undefined ? '' : value;\n                            },\n                            enumerable: true,\n                            configurable: true\n                        });\n                        Textarea.prototype._onChange = function (e) {\n                            this.fire('field-value-changed', this);\n                            this.setAttribute('value', this.value);\n                            this.isValid();\n                        };\n                        Textarea.prototype.isValid = function () {\n                            var message;\n                            for (var i = 0; i < this._validators.length; i++) {\n                                message = eval(this._validators[i] + \".isValid(this.value)\");\n                                if (typeof message == 'string') {\n                                    return this.displayError(message);\n                                }\n                            }\n                            return this.displayError();\n                        };\n                        Textarea.prototype.displayError = function (detail) {\n                            this.errorMessage = detail;\n                            this.fire('error', this.errorMessage);\n                            if (!this.errorMessage) {\n                                this.classList.remove('_error');\n                                return false;\n                            }\n                            this.classList.add('_error');\n                            return true;\n                        };\n                        __decorate([property({ type: String, reflectToAttribute: true })], Textarea.prototype, \"id\", void 0);\n                        __decorate([property({ type: String, reflectToAttribute: true })], Textarea.prototype, \"name\", void 0);\n                        __decorate([property({ type: String })], Textarea.prototype, \"value\", void 0);\n                        __decorate([property({ type: String, reflectToAttribute: true })], Textarea.prototype, \"placeholder\", void 0);\n                        __decorate([property({ type: Boolean, reflectToAttribute: true })], Textarea.prototype, \"required\", void 0);\n                        __decorate([listen('input')], Textarea.prototype, \"_onChange\", null);\n                        Textarea = __decorate([component('textarea-element'), extend(\"textarea\")], Textarea);\n                        return Textarea;\n                    }(AbstractPolymerElement);\n                    Element.Textarea = Textarea;\n                })(Element = Form.Element || (Form.Element = {}));\n            })(Form = Component.Form || (Component.Form = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nCom.Threeds.Component.Form.Element.Textarea.register();\nvar __extends = this && this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n    var c = arguments.length,\n        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n        d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var Form;\n            (function (Form) {\n                var Element;\n                (function (Element) {\n                    var AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n                    var Checkbox = function (_super) {\n                        __extends(Checkbox, _super);\n                        function Checkbox(context, data) {\n                            _super.call(this, data);\n                            this.type = 'checkbox';\n                            this.checked = false;\n                            this.required = false;\n                            this._errorMessage = '';\n                            if (data.name != undefined) this.id = data.name;\n                            if (data.name != undefined) this.name = data.name;\n                            if (data.required != undefined) this.required = data.required;\n                            if (data.value != undefined) this.checked = data.value;\n                        }\n                        Object.defineProperty(Checkbox.prototype, \"errorMessage\", {\n                            get: function () {\n                                return this._errorMessage == undefined ? '' : this._errorMessage;\n                            },\n                            set: function (value) {\n                                this._errorMessage = value == undefined ? '' : value;\n                            },\n                            enumerable: true,\n                            configurable: true\n                        });\n                        Checkbox.prototype._onChange = function (e) {\n                            if (this.checked) {\n                                this.setAttribute(\"checked\", this.checked.toString());\n                            } else {\n                                this.removeAttribute(\"checked\");\n                            }\n                            this.isValid();\n                        };\n                        Checkbox.prototype.isValid = function () {\n                            if (this.required && this.checked == false) {\n                                return this.displayError('This field is required !');\n                            }\n                            return this.displayError();\n                        };\n                        Checkbox.prototype.displayError = function (detail) {\n                            this.errorMessage = detail;\n                            this.fire('error', this.errorMessage);\n                            if (!this.errorMessage) {\n                                this.classList.remove('_error');\n                                return false;\n                            }\n                            this.classList.add('_error');\n                            return true;\n                        };\n                        __decorate([property({ type: Boolean, reflectToAttribute: true })], Checkbox.prototype, \"type\", void 0);\n                        __decorate([property({ type: Boolean })], Checkbox.prototype, \"checked\", void 0);\n                        __decorate([property({ type: String, reflectToAttribute: true })], Checkbox.prototype, \"id\", void 0);\n                        __decorate([property({ type: String, reflectToAttribute: true })], Checkbox.prototype, \"name\", void 0);\n                        __decorate([property({ type: Boolean, reflectToAttribute: true })], Checkbox.prototype, \"required\", void 0);\n                        __decorate([listen('change')], Checkbox.prototype, \"_onChange\", null);\n                        Checkbox = __decorate([component('checkbox-element'), extend(\"input\")], Checkbox);\n                        return Checkbox;\n                    }(AbstractPolymerElement);\n                    Element.Checkbox = Checkbox;\n                })(Element = Form.Element || (Form.Element = {}));\n            })(Form = Component.Form || (Component.Form = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nCom.Threeds.Component.Form.Element.Checkbox.register();\nvar __extends = this && this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n    var c = arguments.length,\n        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n        d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var Form;\n            (function (Form) {\n                var Element;\n                (function (Element) {\n                    var AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n                    var Radio = function (_super) {\n                        __extends(Radio, _super);\n                        function Radio(context, data) {\n                            _super.call(this, data);\n                            this.type = 'radio';\n                            this.checked = false;\n                            this.required = false;\n                            this._errorMessage = '';\n                            if (data.name != undefined) this.id = data.name;\n                            if (data.name != undefined) this.name = data.name;\n                            if (data.required != undefined) this.required = data.required;\n                            if (data.value != undefined) this.checked = data.value;\n                        }\n                        Object.defineProperty(Radio.prototype, \"errorMessage\", {\n                            get: function () {\n                                return this._errorMessage == undefined ? '' : this._errorMessage;\n                            },\n                            set: function (value) {\n                                this._errorMessage = value == undefined ? '' : value;\n                            },\n                            enumerable: true,\n                            configurable: true\n                        });\n                        Radio.prototype._onChange = function (e) {\n                            if (this.checked) {\n                                this.setAttribute(\"checked\", this.checked.toString());\n                            } else {\n                                this.removeAttribute(\"checked\");\n                            }\n                            this.isValid();\n                        };\n                        Radio.prototype.isValid = function () {\n                            if (this.required && this.checked == false) {\n                                return this.displayError('This field is required !');\n                            }\n                            return this.displayError();\n                        };\n                        Radio.prototype.displayError = function (detail) {\n                            this.errorMessage = detail;\n                            this.fire('error', this.errorMessage);\n                            if (!this.errorMessage) {\n                                this.classList.remove('_error');\n                                return false;\n                            }\n                            this.classList.add('_error');\n                            return true;\n                        };\n                        __decorate([property({ type: Boolean, reflectToAttribute: true })], Radio.prototype, \"type\", void 0);\n                        __decorate([property({ type: Boolean })], Radio.prototype, \"checked\", void 0);\n                        __decorate([property({ type: String, reflectToAttribute: true })], Radio.prototype, \"name\", void 0);\n                        __decorate([property({ type: Boolean, reflectToAttribute: true })], Radio.prototype, \"required\", void 0);\n                        __decorate([listen('change')], Radio.prototype, \"_onChange\", null);\n                        Radio = __decorate([component('radio-element'), extend(\"input\")], Radio);\n                        return Radio;\n                    }(AbstractPolymerElement);\n                    Element.Radio = Radio;\n                })(Element = Form.Element || (Form.Element = {}));\n            })(Form = Component.Form || (Component.Form = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nCom.Threeds.Component.Form.Element.Radio.register();\nvar __extends = this && this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n    var c = arguments.length,\n        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n        d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var Form;\n            (function (Form) {\n                var Element;\n                (function (Element) {\n                    var AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n                    var Select = function (_super) {\n                        __extends(Select, _super);\n                        function Select(context, data) {\n                            this.required = false;\n                            this.data = [];\n                            this._errorMessage = '';\n                            this.data = data;\n                            _super.call(this, data);\n                            this.classList.add('form-control');\n                            if (this.data.name != undefined) this.id = this.data.name, this.name = this.data.name;\n                            if (this.data.parentField != undefined) this.parentField = this.data.parentField;\n                            this.update();\n                        }\n                        Select.prototype.clear = function () {\n                            while (Polymer.dom(this).firstChild) Polymer.dom(this).removeChild(Polymer.dom(this).firstChild);\n                            this.innerHTML = '';\n                        };\n                        Select.prototype.update = function () {\n                            this.clear();\n                            var parentField;\n                            if (typeof this.data.parentField != 'undefined') {\n                                parentField = document.querySelector(\"#\" + this.data.parentField);\n                            }\n                            for (var k in this.data.options) {\n                                if (this.data.value != undefined && this.data.options[k].value == this.data.value) this.data.options[k].selected = true;\n                                if (typeof this.data.parentField != 'undefined') {\n                                    if (typeof parentField != 'undefined' && this.data.options[k].parentValue == parentField.options[parentField.selectedIndex].value) this.appendChild(Element.Option.create(this.data.options[k]));\n                                } else {\n                                    this.appendChild(Element.Option.create(this.data.options[k]));\n                                }\n                            }\n                            this.fire('field-hide', !this.options.length ? false : true);\n                        };\n                        Object.defineProperty(Select.prototype, \"errorMessage\", {\n                            get: function () {\n                                return this._errorMessage == undefined ? '' : this._errorMessage;\n                            },\n                            set: function (value) {\n                                this._errorMessage = value == undefined ? '' : value;\n                            },\n                            enumerable: true,\n                            configurable: true\n                        });\n                        Select.prototype._onChange = function (e) {\n                            this.fire('field-value-changed', this);\n                            this.selectOption(this.value);\n                        };\n                        Select.prototype.selectOption = function (value) {\n                            for (var i = 0; i < Polymer.dom(this).node.length; i++) {\n                                Polymer.dom(this).node[i].selected = Polymer.dom(this).node[i].value === value ? true : false;\n                            }\n                        };\n                        Select.prototype.isValid = function () {\n                            if (!this.required) return this.displayError();\n                            var detail;\n                            if (!this.value) detail = 'This field is required !';\n                            return this.displayError(detail);\n                        };\n                        Select.prototype.displayError = function (detail) {\n                            this.errorMessage = detail;\n                            this.fire('error', this.errorMessage);\n                            if (!this.errorMessage) {\n                                this.classList.remove('_error');\n                                return false;\n                            }\n                            this.classList.add('_error');\n                            return true;\n                        };\n                        __decorate([property({ type: String, reflectToAttribute: true })], Select.prototype, \"name\", void 0);\n                        __decorate([property({ type: Boolean, reflectToAttribute: true })], Select.prototype, \"required\", void 0);\n                        __decorate([listen('input')], Select.prototype, \"_onChange\", null);\n                        Select = __decorate([component('select-element'), extend(\"select\")], Select);\n                        return Select;\n                    }(AbstractPolymerElement);\n                    Element.Select = Select;\n                })(Element = Form.Element || (Form.Element = {}));\n            })(Form = Component.Form || (Component.Form = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nCom.Threeds.Component.Form.Element.Select.register();\nvar __extends = this && this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n    var c = arguments.length,\n        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n        d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var Form;\n            (function (Form) {\n                var Element;\n                (function (Element) {\n                    var AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n                    var FieldGroup = function (_super) {\n                        __extends(FieldGroup, _super);\n                        function FieldGroup(context, data) {\n                            _super.call(this, data);\n                            this.classList.add('form-group');\n                            this.classList.add('row');\n                            var label = document.createElement('label');\n                            label.className = 'col-sm-2 form-control-label';\n                            label.innerText = data.label;\n                            this.appendChild(label);\n                            var container = document.createElement('div');\n                            container.classList.add('col-sm-10');\n                            for (var i in data.items) {\n                                container.appendChild(Element.Field.create(context, data.items[i]));\n                            }\n                            this.appendChild(container);\n                        }\n                        FieldGroup = __decorate([component('field-group-element'), extend(\"div\")], FieldGroup);\n                        return FieldGroup;\n                    }(AbstractPolymerElement);\n                    Element.FieldGroup = FieldGroup;\n                })(Element = Form.Element || (Form.Element = {}));\n            })(Form = Component.Form || (Component.Form = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nCom.Threeds.Component.Form.Element.FieldGroup.register();\nvar __extends = this && this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n    var c = arguments.length,\n        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n        d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var Form;\n            (function (Form) {\n                var Element;\n                (function (Element) {\n                    var AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n                    var Field = function (_super) {\n                        __extends(Field, _super);\n                        function Field(context, data) {\n                            this.hydrateValidators(data);\n                            _super.call(this, data);\n                            this.data = data;\n                            this.classList.add('form-group');\n                            this.classList.add('row');\n                            if (typeof data.required != 'undefined' && typeof data.required) {\n                                this.classList.add('field-required');\n                            }\n                            this.classList.add(\"field-\" + data.name);\n                            this.append(context, data);\n                        }\n                        Field.prototype.label = function (context, data) {\n                            if (!context.settings.display.label) return;\n                            var label = document.createElement('label');\n                            label.htmlFor = data.name;\n                            if (data.type != 'checkbox' && data.type != 'radio') {\n                                label.className = 'col-sm-2 form-control-label';\n                            } else {\n                                label.className = 'form-control-label';\n                            }\n                            label.appendChild(document.createTextNode(this.data.label));\n                            label.appendChild(document.createTextNode(context.settings.styling.label.suffixe));\n                            if (typeof data.required != 'undefined' && data.required && context.settings.styling.label.mandatory != '') {\n                                var mandatory = document.createElement('span');\n                                mandatory.setAttribute('class', 'mandatory');\n                                mandatory.innerText = context.settings.styling.label.mandatory;\n                                label.appendChild(mandatory);\n                            }\n                            return label;\n                        };\n                        Field.prototype.container = function (context, data) {\n                            var type = data.type.toLowerCase();\n                            var container = document.createElement('div');\n                            container.classList.add(context.settings.display.label ? 'col-sm-10' : 'col-sm-12');\n                            return container;\n                        };\n                        Field.prototype.append = function (context, data) {\n                            var type = data.type.toLowerCase();\n                            var container = this.container(context, data);\n                            var label = this.label(context, data);\n                            if (type != 'checkbox' && type != 'radio' && context.settings.display.label) {\n                                this.appendChild(label);\n                            }\n                            switch (type) {\n                                case 'fieldgroup':\n                                    this.appendChild(FieldGroupElement.create(context, data));\n                                    break;\n                                case 'select':\n                                    container.appendChild(Element.Select.create(context, data));\n                                    this.appendChild(container);\n                                    break;\n                                case 'checkbox':\n                                    label.insertBefore(Element.Checkbox.create(context, data), label.firstChild);\n                                    container.appendChild(label);\n                                    container.classList.add('checkbox');\n                                    this.appendChild(container);\n                                    break;\n                                case 'radio':\n                                    label.insertBefore(Element.Radio.create(context, data), label.firstChild);\n                                    container.appendChild(label);\n                                    container.classList.add('radio');\n                                    this.appendChild(container);\n                                    break;\n                                case 'text':\n                                    container.appendChild(Element.Input.create(context, data));\n                                    this.appendChild(container);\n                                    break;\n                                case 'textarea':\n                                    container.appendChild(Element.Textarea.create(context, data));\n                                    this.appendChild(container);\n                                    break;\n                                default:\n                                    console.log('<!> field no defined');\n                                    console.log(data);\n                                    break;\n                            }\n                            this.fire('field-create', this);\n                        };\n                        Field.prototype.hydrateValidators = function (data) {\n                            var validators = data.validators == undefined ? [] : data.validators;\n                            if (data.name == 'email' && data.type != 'hidden') validators.push('Com.Threeds.Validator.Email');\n                            if (data.required) validators.push('Com.Threeds.Validator.Require');\n                            if (validators.length) data.validators = validators;\n                        };\n                        Field.prototype.handleError = function (e, detail) {\n                            this.displayError(detail);\n                        };\n                        Field.prototype.displayError = function (detail) {\n                            this.error = detail;\n                            if (this.error == undefined || this.error == '') {\n                                this.classList.remove('has-error');\n                            } else {\n                                this.classList.add('has-error');\n                            }\n                        };\n                        Field.prototype.handleHide = function (e, status) {\n                            if (status) {\n                                this.classList.remove('hide');\n                            } else {\n                                this.classList.add('hide');\n                            }\n                        };\n                        __decorate([property({ type: String })], Field.prototype, \"error\", void 0);\n                        __decorate([listen(\"error\")], Field.prototype, \"handleError\", null);\n                        __decorate([listen('field-hide')], Field.prototype, \"handleHide\", null);\n                        Field = __decorate([component('field-element'), extend(\"div\"), template(\"<template is=\\\"dom-if\\\" if=\\\"{{error}}\\\"><div class=\\\"alert alert-danger\\\">{{error}}</div></template>\")], Field);\n                        return Field;\n                    }(AbstractPolymerElement);\n                    Element.Field = Field;\n                })(Element = Form.Element || (Form.Element = {}));\n            })(Form = Component.Form || (Component.Form = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nCom.Threeds.Component.Form.Element.Field.register();\nvar __extends = this && this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n    var c = arguments.length,\n        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n        d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var Form;\n            (function (Form) {\n                var Element;\n                (function (Element) {\n                    var AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n                    var Submit = function (_super) {\n                        __extends(Submit, _super);\n                        function Submit(context, data) {\n                            _super.call(this, data);\n                            this.type = 'submit';\n                            this.class = 'btn btn-default';\n                        }\n                        __decorate([property({ type: String, reflectToAttribute: true })], Submit.prototype, \"type\", void 0);\n                        __decorate([property({ type: String, reflectToAttribute: true })], Submit.prototype, \"name\", void 0);\n                        __decorate([property({ type: String })], Submit.prototype, \"value\", void 0);\n                        __decorate([property({ type: String, reflectToAttribute: true })], Submit.prototype, \"class\", void 0);\n                        Submit = __decorate([component('submit-element'), extend(\"input\")], Submit);\n                        return Submit;\n                    }(AbstractPolymerElement);\n                    Element.Submit = Submit;\n                })(Element = Form.Element || (Form.Element = {}));\n            })(Form = Component.Form || (Component.Form = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nCom.Threeds.Component.Form.Element.Submit.register();\nvar __extends = this && this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n    var c = arguments.length,\n        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n        d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var Form;\n            (function (Form) {\n                var Element;\n                (function (Element) {\n                    var AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n                    var SubmitElement = Com.Threeds.Component.Form.Element.Submit;\n                    var Step = function (_super) {\n                        __extends(Step, _super);\n                        function Step(context, data) {\n                            if (data.success == undefined && !data.success && data.result.config !== undefined) return;\n                            _super.call(this, data);\n                            this.appendChild(Element.Input.create(context, {\n                                name: \"op\",\n                                type: \"hidden\",\n                                value: data.result.nextAction\n                            }));\n                            for (var k in data.result.config) {\n                                if (data.result.config[k].type.toLowerCase() == 'hidden') {\n                                    this.appendChild(Element.Input.create(context, data.result.config[k]));\n                                } else if (data.result.config[k].type.toLowerCase() == 'fieldgroup') {\n                                    this.appendChild(Element.FieldGroup.create(context, data.result.config[k]));\n                                } else {\n                                    this.appendChild(Element.Field.create(context, data.result.config[k]));\n                                }\n                            }\n                            this.appendChild(SubmitElement.create({}));\n                        }\n                        Step = __decorate([component('step-element'), extend(\"div\")], Step);\n                        return Step;\n                    }(AbstractPolymerElement);\n                    Element.Step = Step;\n                })(Element = Form.Element || (Form.Element = {}));\n            })(Form = Component.Form || (Component.Form = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nCom.Threeds.Component.Form.Element.Step.register();\nvar __extends = this && this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Core;\n        (function (Core) {\n            var Ajax;\n            (function (Ajax) {\n                var AbstractPlugin = Com.Threeds.Plugin.AbstractPlugin;\n                var AutoComplete = function (_super) {\n                    __extends(AutoComplete, _super);\n                    function AutoComplete(context, elem, options) {\n                        _super.call(this, elem, options);\n                        this.settings = {\n                            api: {\n                                adapter: 'Com.Threeds.Service.Adapter.Neolane',\n                                serviceName: 'customerAutocomplete'\n                            },\n                            select: function (data) {}\n                        };\n                        this.context = context;\n                        this.elem = elem;\n                        this.settings = $.extend({}, this.settings, options);\n                        this.service('api')[this.settings.api.serviceName](this, this.settings);\n                    }\n                    AutoComplete.prototype.render = function (context, data) {\n                        console.log('AutoComplete->render->>>>>');\n                        console.log(data);\n                    };\n                    return AutoComplete;\n                }(AbstractPlugin);\n                Ajax.AutoComplete = AutoComplete;\n            })(Ajax = Core.Ajax || (Core.Ajax = {}));\n        })(Core = Threeds.Core || (Threeds.Core = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nvar __extends = this && this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n    var c = arguments.length,\n        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n        d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var Form;\n            (function (Form) {\n                var Element;\n                (function (Element) {\n                    var Behavior;\n                    (function (Behavior) {\n                        var Neolane;\n                        (function (Neolane) {\n                            var FormBehavior = function (_super) {\n                                __extends(FormBehavior, _super);\n                                function FormBehavior() {\n                                    _super.apply(this, arguments);\n                                }\n                                FormBehavior.prototype.action = function (form, data) {\n                                    if (Object.isDefined(data, 'result.config')) {\n                                        form.update(data);\n                                    } else if (Object.isDefined(data, 'result.thankYouPage')) {\n                                        if (data.result.properties.displayThankYou) {\n                                            form.success(data.result.thankYouPage);\n                                            if (data.result.properties.openUrl) {}\n                                        } else if (data.result.properties.openUrl) {\n                                            form.redirect(data.result.asset.url);\n                                        }\n                                    } else if (Object.isDefined(data, 'result.properties.content') && Object.isDefined(data, 'result.properties.redirect') && data.result.properties.redirect) {\n                                        form.redirect(data.result.properties.content);\n                                    } else if (Object.isDefined(data, 'result.properties.content') && Object.isDefined(data, 'result.properties.redirect') && !data.result.properties.redirect) {\n                                        form.warning(data.result.properties.content);\n                                    } else if (Object.isDefined(data, 'errors.0.error.message')) {\n                                        form.warning(data.errors[0].error.message);\n                                    } else if (Object.isDefined(data, 'errors')) {\n                                        form.errors = data.errors.fields;\n                                    }\n                                };\n                                FormBehavior.prototype._onCreate = function (e, elem) {\n                                    var context = this;\n                                    if (elem.data.name == 'company') {}\n                                };\n                                FormBehavior.prototype._onChange = function (e, elem) {\n                                    for (var n = 0; n < Polymer.dom(this).node.length; n++) {\n                                        if (typeof Polymer.dom(this).node[n].parentField != 'undefined' && elem.name == Polymer.dom(this).node[n].parentField) {\n                                            for (var i = 0; i < Polymer.dom(this).node.length; i++) {\n                                                if (typeof Polymer.dom(this).node[i].name != 'undefined' && Polymer.dom(this).node[i].name.toLowerCase() == Polymer.dom(this).node[n].name.toLowerCase()) {\n                                                    Polymer.dom(this).node[i].update();\n                                                }\n                                            }\n                                        }\n                                    }\n                                };\n                                FormBehavior.prototype._onSubmit = function (e) {\n                                    if (e) e.preventDefault();\n                                    this.submit();\n                                    return false;\n                                };\n                                FormBehavior.prototype.submit = function () {\n                                    this.valid();\n                                    if (!Object.keys(this.errors).length) this.post();\n                                };\n                                FormBehavior.prototype.post = function () {\n                                    var data = Com.Threeds.Component.Form.Element.Form.serialize(this);\n                                    this.context.service('api').post(this, data);\n                                };\n                                FormBehavior.prototype.render = function (type, data) {\n                                    if (type == 'form') this.dispatch(data);\n                                };\n                                __decorate([listen('field-create')], FormBehavior.prototype, \"_onCreate\", null);\n                                __decorate([listen('field-value-changed')], FormBehavior.prototype, \"_onChange\", null);\n                                __decorate([listen('submit')], FormBehavior.prototype, \"_onSubmit\", null);\n                                return FormBehavior;\n                            }(polymer.Base);\n                            Neolane.FormBehavior = FormBehavior;\n                        })(Neolane = Behavior.Neolane || (Behavior.Neolane = {}));\n                    })(Behavior = Element.Behavior || (Element.Behavior = {}));\n                })(Element = Form.Element || (Form.Element = {}));\n            })(Form = Component.Form || (Component.Form = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nObject.isDefined = function (obj, prop) {\n    var parts = prop.split('.');\n    for (var i = 0, l = parts.length; i < l; i++) {\n        var part = parts[i];\n        if (obj !== null && typeof obj === \"object\" && part in obj) {\n            obj = obj[part];\n        } else {\n            return false;\n        }\n    }\n    return true;\n};\nObject.isEmpty = function (obj, prop) {\n    var parts = prop.split('.');\n    for (var i = 0, l = parts.length; i < l; i++) {\n        var part = parts[i];\n        if (obj !== null && typeof obj === \"object\" && part in obj) {\n            obj = obj[part];\n        } else {\n            return false;\n        }\n    }\n    return obj == '' ? true : false;\n};\nvar __extends = this && this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n    var c = arguments.length,\n        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n        d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var Form;\n            (function (Form_1) {\n                var Element;\n                (function (Element) {\n                    var AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n                    var StepElement = Com.Threeds.Component.Form.Element.Step;\n                    var Form = function (_super) {\n                        __extends(Form, _super);\n                        function Form(context, data) {\n                            _super.call(this, data);\n                            this._currentPosition = 0;\n                            this._steps = [];\n                            this._errors = [];\n                            this.context = context;\n                            this.dispatch(data);\n                        }\n                        Object.defineProperty(Form.prototype, \"currentPosition\", {\n                            get: function () {\n                                return this._currentPosition;\n                            },\n                            set: function (value) {\n                                if (typeof this.context.settings.hook.setCurrentPosition == 'function') {\n                                    this.context.settings.hook.setCurrentPosition(this, value);\n                                }\n                                this._currentPosition = value;\n                            },\n                            enumerable: true,\n                            configurable: true\n                        });\n                        Object.defineProperty(Form.prototype, \"settings\", {\n                            get: function () {\n                                return this.context.settings;\n                            },\n                            enumerable: true,\n                            configurable: true\n                        });\n                        Object.defineProperty(Form.prototype, \"errors\", {\n                            get: function () {\n                                return this._errors;\n                            },\n                            set: function (value) {\n                                this._errors = value;\n                                for (var i = 0; i < Polymer.dom(this).node.length; i++) {\n                                    if (typeof Polymer.dom(this).node[i].displayError === 'function') {\n                                        for (var k in this._errors) {\n                                            if (Polymer.dom(this).node[i].name == k) {\n                                                Polymer.dom(this).node[i].displayError(this._errors[k]);\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            enumerable: true,\n                            configurable: true\n                        });\n                        Form.prototype.valid = function () {\n                            this._errors = [];\n                            for (var i = 0; i < Polymer.dom(this).node.length; i++) {\n                                if (typeof Polymer.dom(this).node[i].isValid === 'function') {\n                                    if (Polymer.dom(this).node[i].isValid() == true) this._errors[Polymer.dom(this).node[i].name] = Polymer.dom(this).node[i].errorMessage;\n                                }\n                            }\n                        };\n                        Form.prototype.dispatch = function (data) {\n                            if (typeof this.behaviors[0] != undefined && typeof this.behaviors[0].action == 'function') {\n                                this.behaviors[0].action(this, data);\n                            } else {\n                                console.log('Uncaught TypeError: this.behaviors[0].action is not a function');\n                            }\n                        };\n                        Form.prototype.clear = function () {\n                            while (Polymer.dom(this).firstChild) Polymer.dom(this).removeChild(Polymer.dom(this).firstChild);\n                            this.innerHTML = '';\n                        };\n                        Form.prototype.add = function (data) {\n                            if (!Polymer.dom(this).node.length) {\n                                this._steps.push(data);\n                                this.currentPosition = 0;\n                                return true;\n                            }\n                            var name;\n                            for (var n = 0; n < Polymer.dom(this).node.length; n++) {\n                                if (Polymer.dom(this).node[n].name == undefined) continue;\n                                name = Polymer.dom(this).node[n].name;\n                                for (var k in data.result.config) {\n                                    if (data.result.config[k].name = name && data.result.config[k].type != 'hidden') {\n                                        this._steps.push(data);\n                                        this.currentPosition++;\n                                        return true;\n                                    }\n                                }\n                            }\n                            return false;\n                        };\n                        Form.prototype.update = function (data) {\n                            this.add(data);\n                            this.clear();\n                            this.appendChild(StepElement.create(this.context, data));\n                        };\n                        Form.prototype.goTo = function (id) {\n                            if (typeof this._steps[id] != \"undefined\") {\n                                this.clear();\n                                this.appendChild(StepElement.create(this.context, this._steps[id]));\n                                this.currentPosition = id;\n                            }\n                        };\n                        Form.prototype.prev = function () {\n                            var id = this.currentPosition - 1;\n                            this.goTo(id);\n                        };\n                        Form.prototype.next = function () {\n                            var id = this.currentPosition + 1;\n                            this.goTo(id);\n                        };\n                        Form.prototype.append = function (data) {\n                            for (var i = 0; i < Polymer.dom(this).node.length; i++) {\n                                if (typeof Polymer.dom(this).node[i].name != 'undefined' && Polymer.dom(this).node[i].name == data.name) {\n                                    Polymer.dom(this).node[i].value = data.value;\n                                    return this;\n                                }\n                            }\n                            this.insertBefore(Element.Input.create(this, data), this.firstChild);\n                            return this;\n                        };\n                        Form.prototype.success = function (data) {\n                            if (typeof this.context.settings.hook.success == 'function') {\n                                this.context.settings.hook.success(this, data);\n                            } else {\n                                this.clear();\n                                this.innerHTML = \"<h1>\" + data.title + \"</h1>\" + data.content;\n                            }\n                        };\n                        Form.prototype.warning = function (message) {\n                            if (typeof this.context.settings.hook.warning == 'function') {\n                                this.context.settings.hook.warning(this, message);\n                            } else {\n                                this.clear();\n                                this.innerHTML = message;\n                            }\n                        };\n                        Form.prototype.redirect = function (url) {\n                            if (typeof this.context.settings.hook.redirect == 'function') {\n                                this.context.settings.hook.redirect(this, url);\n                            } else {\n                                window.location = url;\n                            }\n                        };\n                        Form.serialize = function (form) {\n                            if (!form || form.nodeName !== \"FORM\") {\n                                return;\n                            }\n                            var i,\n                                j,\n                                dict = {};\n                            for (i = form.elements.length - 1; i >= 0; i = i - 1) {\n                                if (form.elements[i].name === \"\" || typeof form.elements[i].name == 'undefined') {\n                                    continue;\n                                }\n                                switch (form.elements[i].nodeName) {\n                                    case 'INPUT':\n                                        switch (form.elements[i].type) {\n                                            case 'text':\n                                            case 'hidden':\n                                            case 'password':\n                                            case 'button':\n                                            case 'reset':\n                                            case 'submit':\n                                                dict[form.elements[i].name] = form.elements[i].value;\n                                                break;\n                                            case 'checkbox':\n                                            case 'radio':\n                                                if (form.elements[i].checked) {\n                                                    dict[form.elements[i].name] = encodeURIComponent(form.elements[i].value);\n                                                }\n                                                break;\n                                            case 'file':\n                                                break;\n                                        }\n                                        break;\n                                    case 'TEXTAREA':\n                                        dict[form.elements[i].name] = encodeURIComponent(form.elements[i].value);\n                                        break;\n                                    case 'SELECT':\n                                        switch (form.elements[i].type) {\n                                            case 'select-one':\n                                                dict[form.elements[i].name] = encodeURIComponent(form.elements[i].value);\n                                                break;\n                                            case 'select-multiple':\n                                                for (j = form.elements[i].options.length - 1; j >= 0; j = j - 1) {\n                                                    if (form.elements[i].options[j].selected) {\n                                                        dict[form.elements[i].name] = encodeURIComponent(form.elements[i].options[j].value);\n                                                    }\n                                                }\n                                                break;\n                                        }\n                                        break;\n                                    case 'BUTTON':\n                                        switch (form.elements[i].type) {\n                                            case 'reset':\n                                            case 'submit':\n                                            case 'button':\n                                                dict[form.elements[i].name] = encodeURIComponent(form.elements[i].value);\n                                                break;\n                                        }\n                                        break;\n                                }\n                            }\n                            return dict;\n                        };\n                        __decorate([property({ type: String, reflectToAttribute: true })], Form.prototype, \"id\", void 0);\n                        __decorate([property({ type: String, reflectToAttribute: true })], Form.prototype, \"name\", void 0);\n                        __decorate([property({ type: String, reflectToAttribute: true })], Form.prototype, \"method\", void 0);\n                        __decorate([property({ type: String, reflectToAttribute: true })], Form.prototype, \"action\", void 0);\n                        Form = __decorate([component('form-element'), extend(\"form\"), behavior(Com.Threeds.Component.Form.Element.Behavior.Neolane.FormBehavior)], Form);\n                        return Form;\n                    }(AbstractPolymerElement);\n                    Element.Form = Form;\n                })(Element = Form_1.Element || (Form_1.Element = {}));\n            })(Form = Component.Form || (Component.Form = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nCom.Threeds.Component.Form.Element.Form.register();\nvar __extends = this && this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var Form;\n            (function (Form_1) {\n                var AbstractPlugin = Com.Threeds.Plugin.AbstractPlugin;\n                var Form = Com.Threeds.Component.Form.Element.Form;\n                var Plugin = function (_super) {\n                    __extends(Plugin, _super);\n                    function Plugin(elem, options) {\n                        _super.call(this, elem, options);\n                        this.settings = {\n                            id: 'LDP6312',\n                            display: {\n                                label: true,\n                                placeholder: true\n                            },\n                            styling: {\n                                label: {\n                                    suffixe: ' : ',\n                                    mandatory: ' * '\n                                }\n                            },\n                            api: {\n                                adapter: 'Com.Threeds.Service.Adapter.Neolane',\n                                url: 'http://dassault-test.neolane.net/dsx/lp_api.jssp'\n                            },\n                            hook: {\n                                render: undefined,\n                                success: undefined,\n                                redirect: undefined,\n                                warning: undefined,\n                                setCurrentPosition: undefined\n                            }\n                        };\n                        this.settings = $.extend({}, this.settings, options);\n                        this.service('api').form(this, {});\n                    }\n                    Plugin.prototype.render = function (type, data) {\n                        if (typeof this.settings.hook.render == 'function') {\n                            this.settings.hook.render(this, type, data);\n                        } else {\n                            this.elem.append(Form.create(this, data));\n                        }\n                    };\n                    return Plugin;\n                }(AbstractPlugin);\n                Form_1.Plugin = Plugin;\n                $.namespace('threeds', {\n                    form: function (options) {\n                        return new Plugin(this, options);\n                    }\n                });\n            })(Form = Component.Form || (Component.Form = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nvar __extends = this && this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var LandingPage;\n            (function (LandingPage) {\n                var AbstractPlugin = Com.Threeds.Plugin.AbstractPlugin;\n                var Form = Com.Threeds.Component.Form.Element.Form;\n                var Plugin = function (_super) {\n                    __extends(Plugin, _super);\n                    function Plugin(elem, options) {\n                        _super.call(this, elem, options);\n                        this.settings = {\n                            id: 'LDP6312',\n                            type: 'download',\n                            steps: {\n                                0: {\n                                    title: 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua',\n                                    button: 'Submit'\n                                },\n                                1: {\n                                    title: 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua',\n                                    button: 'download'\n                                }\n                            },\n                            thankyou: {\n                                title: 'Step 1',\n                                content: 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua'\n                            },\n                            error: {\n                                title: 'Step 1',\n                                content: 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua'\n                            },\n                            api: {\n                                adapter: 'Com.Threeds.Service.Adapter.Neolane',\n                                url: 'http://dassault-test.neolane.net/dsx/lp_api.jssp'\n                            },\n                            callback: {\n                                success: undefined\n                            }\n                        };\n                        this.settings = $.extend({}, this.settings, options);\n                        this.service('api').form(this, {});\n                    }\n                    Plugin.prototype.render = function (type, data) {\n                        if (typeof this.settings.hook.render == 'function') {\n                            this.settings.hook.render(this, type, data);\n                        } else {\n                            this.elem.append(Form.create(this, data));\n                        }\n                    };\n                    return Plugin;\n                }(AbstractPlugin);\n                LandingPage.Plugin = Plugin;\n                $.namespace('threeds', {\n                    landingPage: function (options) {\n                        return new Plugin(this, options);\n                    }\n                });\n            })(LandingPage = Component.LandingPage || (Component.LandingPage = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nvar __extends = this && this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Service;\n        (function (Service) {\n            var Adapter;\n            (function (Adapter) {\n                var AbstractAdapter = Com.Threeds.Service.Adapter.AbstractAdapter;\n                var Neolane = function (_super) {\n                    __extends(Neolane, _super);\n                    function Neolane() {\n                        _super.apply(this, arguments);\n                    }\n                    Neolane.prototype.form = function (context, options) {\n                        var self = this;\n                        $.ajax({\n                            type: \"GET\", dataType: \"json\", url: 'data/form/AutoComplete.json',\n                            success: function (response) {\n                                context.render('form', self.data(response));\n                            },\n                            error: function (resultat, statut, erreur) {\n                                context.render('form', false);\n                            }\n                        });\n                    };\n                    Neolane.prototype.post = function (context, data) {\n                        var self = this;\n                        data['lpid'] = context.settings.id;\n                        $.ajax({\n                            type: \"POST\",\n                            dataType: \"jsonp\",\n                            url: context.settings.form.url,\n                            data: data,\n                            success: function (response) {\n                                console.log(response);\n                                context.render('form', self.data(response));\n                            },\n                            error: function (resultat, statut, erreur) {\n                                context.render('form', false);\n                            }\n                        });\n                    };\n                    Neolane.prototype.customerAutocomplete = function (context, data) {\n                        $.ajax({\n                            url: 'http://dassault-test.neolane.net/dsx/dnbWebservice.jssp',\n                            dataType: 'jsonp',\n                            data: {\n                                query: 'lorem',\n                                iso: 'fr'\n                            },\n                            success: function (data) {\n                                context.render(context, data);\n                            }\n                        });\n                    };\n                    Neolane.prototype.data = function (reponse) {\n                        if (typeof reponse.result != 'undefined' && typeof reponse.result.config != 'undefined') {\n                            this.clean(reponse.result.config);\n                        }\n                        if (typeof reponse.result != 'undefined' && typeof reponse.result.config != 'undefined' && typeof reponse.result.data != 'undefined') {\n                            this.hydrate(reponse.result.config, reponse.result.data);\n                        }\n                        return reponse;\n                    };\n                    Neolane.prototype.clean = function (data) {\n                        for (var i = 0; i < data.length; i++) {\n                            if (typeof data[i].type != 'undefined' && data[i].type == 'picklist') {\n                                data[i].type = 'select';\n                            } else if (typeof data[i].type != 'undefined' && data[i].type == 'string') {\n                                data[i].type = 'text';\n                            } else if (typeof data[i].type != 'undefined' && data[i].type == 'fieldgroup') {\n                                this.clean(data[i].items);\n                            }\n                        }\n                    };\n                    Neolane.prototype.hydrate = function (data, values) {\n                        for (var i = 0; i < data.length; i++) {\n                            if (typeof data[i].name != 'undefined' && values[data[i].name] != 'undefined') {\n                                data[i].value = values[data[i].name];\n                            } else if (typeof data[i].type != 'undefined' && data[i].type == 'fieldgroup') {\n                                this.hydrate(data[i].items, values);\n                            }\n                        }\n                    };\n                    return Neolane;\n                }(AbstractAdapter);\n                Adapter.Neolane = Neolane;\n            })(Adapter = Service.Adapter || (Service.Adapter = {}));\n        })(Service = Threeds.Service || (Threeds.Service = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nvar __extends = this && this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n    var c = arguments.length,\n        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n        d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var Form;\n            (function (Form) {\n                var Element;\n                (function (Element) {\n                    var AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n                    var Option = function (_super) {\n                        __extends(Option, _super);\n                        function Option(data) {\n                            _super.call(this, data);\n                            if (data.label != undefined) this.label = data.label;\n                            if (data.value != undefined) this.value = data.value;\n                            if (data.selected != undefined) this.selected = data.selected;\n                        }\n                        Option.prototype.labelChanged = function (newValue, oldValue) {\n                            this.innerText = newValue;\n                        };\n                        Option.prototype.ready = function () {};\n                        __decorate([property({ type: String, reflectToAttribute: true })], Option.prototype, \"label\", void 0);\n                        __decorate([property({ type: String, reflectToAttribute: true })], Option.prototype, \"value\", void 0);\n                        __decorate([property({ type: Boolean, reflectToAttribute: true })], Option.prototype, \"selected\", void 0);\n                        __decorate([observe(\"label\")], Option.prototype, \"labelChanged\", null);\n                        Option = __decorate([component('option-element'), extend(\"option\")], Option);\n                        return Option;\n                    }(AbstractPolymerElement);\n                    Element.Option = Option;\n                })(Element = Form.Element || (Form.Element = {}));\n            })(Form = Component.Form || (Component.Form = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nCom.Threeds.Component.Form.Element.Option.register();});});","/// <reference path=\"../../../../bower_components/polymer-ts/polymer-ts.d.ts\"/>\n/// <reference path=\"../../../Element/AbstractPolymerElement.ts\" />\n\nnamespace Com.Threeds.Component.Form.Element {\n\n    import AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n\n    @component('input-element')\n    @extend(\"input\")\n    export class Input extends AbstractPolymerElement {\n        @property({type: String, reflectToAttribute: true})\n            type:string = 'text';\n\n        @property({type: String, reflectToAttribute: true})\n            id:string;\n\n        @property({type: String, reflectToAttribute: true})\n            name:string;\n\n        @property({type: String})\n            value:string = 'lorem@lorem.fr';\n\n        @property({type: String, reflectToAttribute: true})\n            placeholder:string;\n\n        @property({type: Boolean, reflectToAttribute: true})\n            required:boolean = false;\n\n        private _validators:string[] = [];\n        private _errorMessage:string = '';\n\n        constructor(context:any, data:any) {\n            super(data);\n\n            if (data.type != undefined && data.type != 'hidden') this.classList.add('form-control');\n\n            if (context.settings.display.placeholder) this.placeholder = data.label\n            if (data.name != undefined) this.id = data.name, this.name = data.name;\n            if (data.required != undefined) this.required = data.required;\n            if (data.type != undefined) this.type = data.type;\n            if (data.value != undefined) this.value = data.value;\n            if (data.validators != undefined) this._validators = data.validators\n        }\n\n        public get errorMessage():string {\n            return (this._errorMessage == undefined ? '' : this._errorMessage);\n        }\n\n        public set errorMessage(value:string) {\n            this._errorMessage = (value == undefined ? '' : value);\n        }\n\n        @listen('input')\n        _onChange(e:Event):void {\n            this.fire('field-value-changed', this)\n            this.setAttribute('value', this.value);\n            this.isValid();\n        }\n\n        isValid() {\n            let message:boolean|string;\n            for (let i = 0; i < this._validators.length; i++) {\n                message = eval(`${this._validators[i]}.isValid(this.value)`);\n                if (typeof message == 'string') {\n                    return this.displayError(message)\n                }\n            }\n\n            return this.displayError()\n        }\n\n        displayError(detail?:string):boolean {\n            this.errorMessage = detail;\n\n            this.fire('error', this.errorMessage);\n\n            if (!this.errorMessage) {\n                this.classList.remove('_error');\n                return false;\n            }\n\n            this.classList.add('_error');\n            return true;\n        }\n    }\n}\n\nCom.Threeds.Component.Form.Element.Input.register();\n\n","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var Form;\n            (function (Form) {\n                var Element;\n                (function (Element) {\n                    var AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n                    var Textarea = (function (_super) {\n                        __extends(Textarea, _super);\n                        function Textarea(context, data) {\n                            _super.call(this, data);\n                            this.value = 'lorem';\n                            this.required = false;\n                            this._validators = [];\n                            this._errorMessage = '';\n                            this.classList.add('form-control');\n                            if (context.settings.display.placeholder)\n                                this.placeholder = data.label;\n                            if (data.name != undefined)\n                                this.id = data.name, this.name = data.name;\n                            if (data.required != undefined)\n                                this.required = data.required;\n                            if (data.value != undefined)\n                                this.value = data.value;\n                            if (data.validators != undefined)\n                                this._validators = data.validators;\n                        }\n                        Object.defineProperty(Textarea.prototype, \"errorMessage\", {\n                            get: function () {\n                                return (this._errorMessage == undefined ? '' : this._errorMessage);\n                            },\n                            set: function (value) {\n                                this._errorMessage = (value == undefined ? '' : value);\n                            },\n                            enumerable: true,\n                            configurable: true\n                        });\n                        Textarea.prototype._onChange = function (e) {\n                            this.fire('field-value-changed', this);\n                            this.setAttribute('value', this.value);\n                            this.isValid();\n                        };\n                        Textarea.prototype.isValid = function () {\n                            var message;\n                            for (var i = 0; i < this._validators.length; i++) {\n                                message = eval(this._validators[i] + \".isValid(this.value)\");\n                                if (typeof message == 'string') {\n                                    return this.displayError(message);\n                                }\n                            }\n                            return this.displayError();\n                        };\n                        Textarea.prototype.displayError = function (detail) {\n                            this.errorMessage = detail;\n                            this.fire('error', this.errorMessage);\n                            if (!this.errorMessage) {\n                                this.classList.remove('_error');\n                                return false;\n                            }\n                            this.classList.add('_error');\n                            return true;\n                        };\n                        __decorate([\n                            property({ type: String, reflectToAttribute: true })\n                        ], Textarea.prototype, \"id\", void 0);\n                        __decorate([\n                            property({ type: String, reflectToAttribute: true })\n                        ], Textarea.prototype, \"name\", void 0);\n                        __decorate([\n                            property({ type: String })\n                        ], Textarea.prototype, \"value\", void 0);\n                        __decorate([\n                            property({ type: String, reflectToAttribute: true })\n                        ], Textarea.prototype, \"placeholder\", void 0);\n                        __decorate([\n                            property({ type: Boolean, reflectToAttribute: true })\n                        ], Textarea.prototype, \"required\", void 0);\n                        __decorate([\n                            listen('input')\n                        ], Textarea.prototype, \"_onChange\", null);\n                        Textarea = __decorate([\n                            component('textarea-element'),\n                            extend(\"textarea\")\n                        ], Textarea);\n                        return Textarea;\n                    }(AbstractPolymerElement));\n                    Element.Textarea = Textarea;\n                })(Element = Form.Element || (Form.Element = {}));\n            })(Form = Component.Form || (Component.Form = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nCom.Threeds.Component.Form.Element.Textarea.register();\n","/// <reference path=\"../../../../bower_components/polymer-ts/polymer-ts.d.ts\"/>\n/// <reference path=\"../../../Element/AbstractPolymerElement.ts\" />\n\nnamespace Com.Threeds.Component.Form.Element {\n\n    import AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n\n    @component('textarea-element')\n    @extend(\"textarea\")\n    export class Textarea extends AbstractPolymerElement {\n        @property({type: String, reflectToAttribute: true})\n            id:string;\n\n        @property({type: String, reflectToAttribute: true})\n            name:string;\n\n        @property({type: String})\n            value:string = 'lorem';\n\n        @property({type: String, reflectToAttribute: true})\n            placeholder:string;\n\n        @property({type: Boolean, reflectToAttribute: true})\n            required:boolean = false;\n\n        private _validators:string[] = [];\n        private _errorMessage:string = '';\n\n        constructor(context:any, data:any) {\n            super(data);\n\n            this.classList.add('form-control');\n\n            if (context.settings.display.placeholder) this.placeholder = data.label\n            if (data.name != undefined) this.id = data.name, this.name = data.name;\n            if (data.required != undefined) this.required = data.required;\n            if (data.value != undefined) this.value = data.value;\n            if (data.validators != undefined) this._validators = data.validators\n        }\n\n        public get errorMessage():string {\n            return (this._errorMessage == undefined ? '' : this._errorMessage);\n        }\n\n        public set errorMessage(value:string) {\n            this._errorMessage = (value == undefined ? '' : value);\n        }\n\n        @listen('input')\n        _onChange(e:Event):void {\n            this.fire('field-value-changed', this)\n            this.setAttribute('value', this.value);\n            this.isValid();\n        }\n\n        isValid() {\n            let message:boolean|string;\n            for (let i = 0; i < this._validators.length; i++) {\n                message = eval(`${this._validators[i]}.isValid(this.value)`);\n                if (typeof message == 'string') {\n                    return this.displayError(message)\n                }\n            }\n\n            return this.displayError()\n        }\n\n        displayError(detail?:string):boolean {\n            this.errorMessage = detail;\n\n            this.fire('error', this.errorMessage);\n\n            if (!this.errorMessage) {\n                this.classList.remove('_error');\n                return false;\n            }\n\n            this.classList.add('_error');\n            return true;\n        }\n    }\n}\n\nCom.Threeds.Component.Form.Element.Textarea.register();\n\n","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var Form;\n            (function (Form) {\n                var Element;\n                (function (Element) {\n                    var AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n                    var Checkbox = (function (_super) {\n                        __extends(Checkbox, _super);\n                        function Checkbox(context, data) {\n                            _super.call(this, data);\n                            this.type = 'checkbox';\n                            this.checked = false;\n                            this.required = false;\n                            this._errorMessage = '';\n                            if (data.name != undefined)\n                                this.id = data.name;\n                            if (data.name != undefined)\n                                this.name = data.name;\n                            if (data.required != undefined)\n                                this.required = data.required;\n                            if (data.value != undefined)\n                                this.checked = data.value;\n                        }\n                        Object.defineProperty(Checkbox.prototype, \"errorMessage\", {\n                            get: function () {\n                                return (this._errorMessage == undefined ? '' : this._errorMessage);\n                            },\n                            set: function (value) {\n                                this._errorMessage = (value == undefined ? '' : value);\n                            },\n                            enumerable: true,\n                            configurable: true\n                        });\n                        Checkbox.prototype._onChange = function (e) {\n                            if (this.checked) {\n                                this.setAttribute(\"checked\", this.checked.toString());\n                            }\n                            else {\n                                this.removeAttribute(\"checked\");\n                            }\n                            this.isValid();\n                        };\n                        Checkbox.prototype.isValid = function () {\n                            if (this.required && this.checked == false) {\n                                return this.displayError('This field is required !');\n                            }\n                            return this.displayError();\n                        };\n                        Checkbox.prototype.displayError = function (detail) {\n                            this.errorMessage = detail;\n                            this.fire('error', this.errorMessage);\n                            if (!this.errorMessage) {\n                                this.classList.remove('_error');\n                                return false;\n                            }\n                            this.classList.add('_error');\n                            return true;\n                        };\n                        __decorate([\n                            property({ type: Boolean, reflectToAttribute: true })\n                        ], Checkbox.prototype, \"type\", void 0);\n                        __decorate([\n                            property({ type: Boolean })\n                        ], Checkbox.prototype, \"checked\", void 0);\n                        __decorate([\n                            property({ type: String, reflectToAttribute: true })\n                        ], Checkbox.prototype, \"id\", void 0);\n                        __decorate([\n                            property({ type: String, reflectToAttribute: true })\n                        ], Checkbox.prototype, \"name\", void 0);\n                        __decorate([\n                            property({ type: Boolean, reflectToAttribute: true })\n                        ], Checkbox.prototype, \"required\", void 0);\n                        __decorate([\n                            listen('change')\n                        ], Checkbox.prototype, \"_onChange\", null);\n                        Checkbox = __decorate([\n                            component('checkbox-element'),\n                            extend(\"input\")\n                        ], Checkbox);\n                        return Checkbox;\n                    }(AbstractPolymerElement));\n                    Element.Checkbox = Checkbox;\n                })(Element = Form.Element || (Form.Element = {}));\n            })(Form = Component.Form || (Component.Form = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nCom.Threeds.Component.Form.Element.Checkbox.register();\n","/// <reference path=\"../../../../bower_components/polymer-ts/polymer-ts.d.ts\"/>\n/// <reference path=\"../../../Element/AbstractPolymerElement.ts\" />\n\nnamespace Com.Threeds.Component.Form.Element {\n\n    import AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n\n    @component('checkbox-element')\n    @extend(\"input\")\n    export class Checkbox extends AbstractPolymerElement {\n\n        @property({type: Boolean, reflectToAttribute: true})\n            type:string = 'checkbox';\n\n        @property({type: Boolean})\n            checked:boolean = false;\n\n        @property({type: String, reflectToAttribute: true})\n            id:string;\n\n        @property({type: String, reflectToAttribute: true})\n            name:string;\n\n        @property({type: Boolean, reflectToAttribute: true})\n            required:boolean = false;\n\n        private _errorMessage:string = '';\n\n        constructor(context:any, data:any) {\n            super(data);\n            if (data.name != undefined) this.id = data.name;\n            if (data.name != undefined) this.name = data.name;\n            if (data.required != undefined) this.required = data.required;\n            if (data.value != undefined) this.checked = data.value;\n        }\n\n        public get errorMessage():string {\n            return (this._errorMessage == undefined ? '' : this._errorMessage);\n        }\n\n        public set errorMessage(value:string) {\n            this._errorMessage = (value == undefined ? '' : value);\n        }\n\n        @listen('change')\n        _onChange(e:Event):void {\n            if (this.checked) {\n                this.setAttribute(\"checked\", this.checked.toString());\n            } else {\n                this.removeAttribute(\"checked\");\n            }\n\n            this.isValid();\n        }\n\n        isValid() {\n            if (this.required  && this.checked == false) {\n                return this.displayError('This field is required !');\n            }\n\n            return this.displayError();\n        }\n\n        displayError(detail?:string):boolean {\n            this.errorMessage = detail;\n\n            this.fire('error', this.errorMessage);\n\n            if (!this.errorMessage) {\n                this.classList.remove('_error');\n                return false;\n            }\n\n            this.classList.add('_error');\n            return true;\n        }\n    }\n}\n\nCom.Threeds.Component.Form.Element.Checkbox.register();\n\n","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var Form;\n            (function (Form) {\n                var Element;\n                (function (Element) {\n                    var AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n                    var Radio = (function (_super) {\n                        __extends(Radio, _super);\n                        function Radio(context, data) {\n                            _super.call(this, data);\n                            this.type = 'radio';\n                            this.checked = false;\n                            this.required = false;\n                            this._errorMessage = '';\n                            if (data.name != undefined)\n                                this.id = data.name;\n                            if (data.name != undefined)\n                                this.name = data.name;\n                            if (data.required != undefined)\n                                this.required = data.required;\n                            if (data.value != undefined)\n                                this.checked = data.value;\n                        }\n                        Object.defineProperty(Radio.prototype, \"errorMessage\", {\n                            get: function () {\n                                return (this._errorMessage == undefined ? '' : this._errorMessage);\n                            },\n                            set: function (value) {\n                                this._errorMessage = (value == undefined ? '' : value);\n                            },\n                            enumerable: true,\n                            configurable: true\n                        });\n                        Radio.prototype._onChange = function (e) {\n                            if (this.checked) {\n                                this.setAttribute(\"checked\", this.checked.toString());\n                            }\n                            else {\n                                this.removeAttribute(\"checked\");\n                            }\n                            this.isValid();\n                        };\n                        Radio.prototype.isValid = function () {\n                            if (this.required && this.checked == false) {\n                                return this.displayError('This field is required !');\n                            }\n                            return this.displayError();\n                        };\n                        Radio.prototype.displayError = function (detail) {\n                            this.errorMessage = detail;\n                            this.fire('error', this.errorMessage);\n                            if (!this.errorMessage) {\n                                this.classList.remove('_error');\n                                return false;\n                            }\n                            this.classList.add('_error');\n                            return true;\n                        };\n                        __decorate([\n                            property({ type: Boolean, reflectToAttribute: true })\n                        ], Radio.prototype, \"type\", void 0);\n                        __decorate([\n                            property({ type: Boolean })\n                        ], Radio.prototype, \"checked\", void 0);\n                        __decorate([\n                            property({ type: String, reflectToAttribute: true })\n                        ], Radio.prototype, \"name\", void 0);\n                        __decorate([\n                            property({ type: Boolean, reflectToAttribute: true })\n                        ], Radio.prototype, \"required\", void 0);\n                        __decorate([\n                            listen('change')\n                        ], Radio.prototype, \"_onChange\", null);\n                        Radio = __decorate([\n                            component('radio-element'),\n                            extend(\"input\")\n                        ], Radio);\n                        return Radio;\n                    }(AbstractPolymerElement));\n                    Element.Radio = Radio;\n                })(Element = Form.Element || (Form.Element = {}));\n            })(Form = Component.Form || (Component.Form = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nCom.Threeds.Component.Form.Element.Radio.register();\n","/// <reference path=\"../../../../bower_components/polymer-ts/polymer-ts.d.ts\"/>\n/// <reference path=\"../../../Element/AbstractPolymerElement.ts\" />\n\nnamespace Com.Threeds.Component.Form.Element {\n\n    import AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n\n    @component('radio-element')\n    @extend(\"input\")\n    export class Radio extends AbstractPolymerElement {\n\n        @property({type: Boolean, reflectToAttribute: true})\n            type:string = 'radio';\n\n        @property({type: Boolean})\n            checked:boolean = false;\n\n        @property({type: String, reflectToAttribute: true})\n            name:string;\n\n        @property({type: Boolean, reflectToAttribute: true})\n            required:boolean = false;\n\n        private _errorMessage:string = '';\n\n        constructor(context:any, data:any) {\n            super(data);\n\n            if (data.name != undefined) this.id = data.name;\n            if (data.name != undefined) this.name = data.name;\n            if (data.required != undefined) this.required = data.required;\n            if (data.value != undefined) this.checked = data.value;\n        }\n\n        public get errorMessage():string {\n            return (this._errorMessage == undefined ? '' : this._errorMessage);\n        }\n\n        public set errorMessage(value:string) {\n            this._errorMessage = (value == undefined ? '' : value);\n        }\n\n        @listen('change')\n        _onChange(e:Event):void {\n            if (this.checked) {\n                this.setAttribute(\"checked\", this.checked.toString());\n            } else {\n                this.removeAttribute(\"checked\");\n            }\n\n            this.isValid();\n        }\n\n        isValid() {\n            if (this.required  && this.checked == false) {\n                return this.displayError('This field is required !');\n            }\n\n            return this.displayError();\n        }s\n\n        displayError(detail?:string):boolean {\n            this.errorMessage = detail;\n\n            this.fire('error', this.errorMessage);\n\n            if (!this.errorMessage) {\n                this.classList.remove('_error');\n                return false;\n            }\n\n            this.classList.add('_error');\n            return true;\n        }\n    }\n}\n\nCom.Threeds.Component.Form.Element.Radio.register();\n\n","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var Form;\n            (function (Form) {\n                var Element;\n                (function (Element) {\n                    var AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n                    var Select = (function (_super) {\n                        __extends(Select, _super);\n                        function Select(context, data) {\n                            this.required = false;\n                            this.data = [];\n                            this._errorMessage = '';\n                            this.data = data;\n                            _super.call(this, data);\n                            this.classList.add('form-control');\n                            if (this.data.name != undefined)\n                                this.id = this.data.name, this.name = this.data.name;\n                            if (this.data.parentField != undefined)\n                                this.parentField = this.data.parentField;\n                            this.update();\n                        }\n                        Select.prototype.clear = function () {\n                            while (Polymer.dom(this).firstChild)\n                                Polymer.dom(this).removeChild(Polymer.dom(this).firstChild);\n                            this.innerHTML = '';\n                        };\n                        Select.prototype.update = function () {\n                            this.clear();\n                            var parentField;\n                            if (typeof this.data.parentField != 'undefined') {\n                                parentField = document.querySelector(\"#\" + this.data.parentField);\n                            }\n                            for (var k in this.data.options) {\n                                if (this.data.value != undefined && this.data.options[k].value == this.data.value)\n                                    this.data.options[k].selected = true;\n                                if (typeof this.data.parentField != 'undefined') {\n                                    if (typeof parentField != 'undefined' && this.data.options[k].parentValue == parentField.options[parentField.selectedIndex].value)\n                                        this.appendChild(Element.Option.create(this.data.options[k]));\n                                }\n                                else {\n                                    this.appendChild(Element.Option.create(this.data.options[k]));\n                                }\n                            }\n                            this.fire('field-hide', (!this.options.length ? false : true));\n                        };\n                        Object.defineProperty(Select.prototype, \"errorMessage\", {\n                            get: function () {\n                                return (this._errorMessage == undefined ? '' : this._errorMessage);\n                            },\n                            set: function (value) {\n                                this._errorMessage = (value == undefined ? '' : value);\n                            },\n                            enumerable: true,\n                            configurable: true\n                        });\n                        Select.prototype._onChange = function (e) {\n                            this.fire('field-value-changed', this);\n                            this.selectOption(this.value);\n                        };\n                        Select.prototype.selectOption = function (value) {\n                            for (var i = 0; i < Polymer.dom(this).node.length; i++) {\n                                Polymer.dom(this).node[i].selected = (Polymer.dom(this).node[i].value === value ? true : false);\n                            }\n                        };\n                        Select.prototype.isValid = function () {\n                            if (!this.required)\n                                return this.displayError();\n                            var detail;\n                            if (!this.value)\n                                detail = 'This field is required !';\n                            return this.displayError(detail);\n                        };\n                        Select.prototype.displayError = function (detail) {\n                            this.errorMessage = detail;\n                            this.fire('error', this.errorMessage);\n                            if (!this.errorMessage) {\n                                this.classList.remove('_error');\n                                return false;\n                            }\n                            this.classList.add('_error');\n                            return true;\n                        };\n                        __decorate([\n                            property({ type: String, reflectToAttribute: true })\n                        ], Select.prototype, \"name\", void 0);\n                        __decorate([\n                            property({ type: Boolean, reflectToAttribute: true })\n                        ], Select.prototype, \"required\", void 0);\n                        __decorate([\n                            listen('input')\n                        ], Select.prototype, \"_onChange\", null);\n                        Select = __decorate([\n                            component('select-element'),\n                            extend(\"select\")\n                        ], Select);\n                        return Select;\n                    }(AbstractPolymerElement));\n                    Element.Select = Select;\n                })(Element = Form.Element || (Form.Element = {}));\n            })(Form = Component.Form || (Component.Form = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nCom.Threeds.Component.Form.Element.Select.register();\n","/// <reference path=\"../../../../bower_components/polymer-ts/polymer-ts.d.ts\"/>\n/// <reference path=\"../../../Element/AbstractPolymerElement.ts\" />\n/// <reference path=\"../../../Element/AbstractPolymerElement.ts\" />\n\nnamespace Com.Threeds.Component.Form.Element {\n\n    import AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n\n    @component('select-element')\n    @extend(\"select\")\n    export class Select extends AbstractPolymerElement {\n\n        @property({type: String, reflectToAttribute: true})\n            name:string;\n\n        @property({type: Boolean, reflectToAttribute: true})\n            required:boolean = false;\n\n        parentField:string;\n        value:string;\n\n        data:any = [];\n\n        private _errorMessage:string = '';\n\n        constructor(context:any, data:any) {\n            this.data = data;\n            super(data);\n            this.classList.add('form-control');\n            if (this.data.name != undefined) this.id = this.data.name, this.name = this.data.name;\n            if (this.data.parentField != undefined) this.parentField = this.data.parentField;\n\n            this.update();\n        }\n\n        clear():void {\n            while (Polymer.dom(this).firstChild) Polymer.dom(this).removeChild(Polymer.dom(this).firstChild);\n            this.innerHTML = '';\n        }\n\n        update():void {\n            this.clear();\n\n            let parentField:any;\n            if (typeof  this.data.parentField != 'undefined') {\n                parentField = document.querySelector(`#${this.data.parentField}`);\n            }\n\n            for (let k in this.data.options) {\n                if (this.data.value != undefined && this.data.options[k].value == this.data.value)  this.data.options[k].selected = true;\n                if (typeof this.data.parentField != 'undefined') {\n                    if (typeof parentField != 'undefined' && this.data.options[k].parentValue == parentField.options[parentField.selectedIndex].value)\n                        this.appendChild(Option.create(this.data.options[k]));\n                } else {\n                    this.appendChild(Option.create(this.data.options[k]));\n                }\n\n            }\n\n            this.fire('field-hide', (!this.options.length ? false:true))\n        }\n\n        public get errorMessage():string {\n            return (this._errorMessage == undefined ? '' : this._errorMessage);\n        }\n\n        public set errorMessage(value:string) {\n            this._errorMessage = (value == undefined ? '' : value);\n        }\n\n        @listen('input')\n        _onChange(e:Event):void {\n            this.fire('field-value-changed', this);\n            this.selectOption(this.value);\n        }\n\n        selectOption(value:string):void {\n            for (let i = 0; i < (<any>Polymer.dom(this)).node.length; i++) {\n                (<any>Polymer.dom(this)).node[i].selected = ((<any>Polymer.dom(this)).node[i].value === value ? true : false);\n            }\n        }\n\n        isValid() {\n            if (!this.required) return this.displayError();\n\n            let detail:string;\n            if (!this.value) detail = 'This field is required !';\n\n\n            return this.displayError(detail);\n\n        }\n\n        displayError(detail?:string):boolean {\n            this.errorMessage = detail;\n\n            this.fire('error', this.errorMessage);\n\n            if (!this.errorMessage) {\n                this.classList.remove('_error');\n                return false;\n            }\n\n            this.classList.add('_error');\n            return true;\n        }\n    }\n}\n\nCom.Threeds.Component.Form.Element.Select.register();\n","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var Form;\n            (function (Form) {\n                var Element;\n                (function (Element) {\n                    var AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n                    var FieldGroup = (function (_super) {\n                        __extends(FieldGroup, _super);\n                        function FieldGroup(context, data) {\n                            _super.call(this, data);\n                            this.classList.add('form-group');\n                            this.classList.add('row');\n                            var label = document.createElement('label');\n                            label.className = 'col-sm-2 form-control-label';\n                            label.innerText = data.label;\n                            this.appendChild(label);\n                            var container = document.createElement('div');\n                            container.classList.add('col-sm-10');\n                            for (var i in data.items) {\n                                container.appendChild(Element.Field.create(context, data.items[i]));\n                            }\n                            this.appendChild(container);\n                        }\n                        FieldGroup = __decorate([\n                            component('field-group-element'),\n                            extend(\"div\")\n                        ], FieldGroup);\n                        return FieldGroup;\n                    }(AbstractPolymerElement));\n                    Element.FieldGroup = FieldGroup;\n                })(Element = Form.Element || (Form.Element = {}));\n            })(Form = Component.Form || (Component.Form = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nCom.Threeds.Component.Form.Element.FieldGroup.register();\n","/// <reference path=\"../../../../bower_components/polymer-ts/polymer-ts.d.ts\"/>\n/// <reference path=\"../../../Component/Form/Element/Field.ts\" />\n/// <reference path=\"../../../Component/Form/Element/Checkbox.ts\" />\n/// <reference path=\"../../../Component/Form/Element/Select.ts\" />\n/// <reference path=\"../../../Element/AbstractPolymerElement.ts\" />\n\nnamespace Com.Threeds.Component.Form.Element {\n\n    import AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n\n    @component('field-group-element')\n    @extend(\"div\")\n    export class FieldGroup extends AbstractPolymerElement {\n\n        constructor(context:any, data:any) {\n            super(data);\n            this.classList.add('form-group');\n            this.classList.add('row');\n\n            let label:HTMLLabelElement = document.createElement('label');\n            label.className = 'col-sm-2 form-control-label';\n            label.innerText = data.label;\n            this.appendChild(label);\n\n            let container:HTMLDivElement = document.createElement('div');\n            container.classList.add('col-sm-10');\n\n            for (let i in data.items) {\n                container.appendChild(Field.create(context, data.items[i]));\n            }\n\n            this.appendChild(container);\n        }\n    }\n\n\n}\n\nCom.Threeds.Component.Form.Element.FieldGroup.register();","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var Form;\n            (function (Form) {\n                var Element;\n                (function (Element) {\n                    var AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n                    var Field = (function (_super) {\n                        __extends(Field, _super);\n                        function Field(context, data) {\n                            this.hydrateValidators(data);\n                            _super.call(this, data);\n                            this.data = data;\n                            this.classList.add('form-group');\n                            this.classList.add('row');\n                            if (typeof data.required != 'undefined' && typeof data.required) {\n                                this.classList.add('field-required');\n                            }\n                            this.classList.add(\"field-\" + data.name);\n                            this.append(context, data);\n                        }\n                        Field.prototype.label = function (context, data) {\n                            if (!context.settings.display.label)\n                                return;\n                            var label = document.createElement('label');\n                            label.htmlFor = data.name;\n                            if (data.type != 'checkbox' && data.type != 'radio') {\n                                label.className = 'col-sm-2 form-control-label';\n                            }\n                            else {\n                                label.className = 'form-control-label';\n                            }\n                            label.appendChild(document.createTextNode(this.data.label));\n                            label.appendChild(document.createTextNode(context.settings.styling.label.suffixe));\n                            if (typeof data.required != 'undefined' && data.required && context.settings.styling.label.mandatory != '') {\n                                var mandatory = document.createElement('span');\n                                mandatory.setAttribute('class', 'mandatory');\n                                mandatory.innerText = context.settings.styling.label.mandatory;\n                                label.appendChild(mandatory);\n                            }\n                            return label;\n                        };\n                        Field.prototype.container = function (context, data) {\n                            var type = data.type.toLowerCase();\n                            var container = document.createElement('div');\n                            container.classList.add(context.settings.display.label ? 'col-sm-10' : 'col-sm-12');\n                            return container;\n                        };\n                        Field.prototype.append = function (context, data) {\n                            var type = data.type.toLowerCase();\n                            var container = this.container(context, data);\n                            var label = this.label(context, data);\n                            if (type != 'checkbox' && type != 'radio' && context.settings.display.label) {\n                                this.appendChild(label);\n                            }\n                            switch (type) {\n                                case 'fieldgroup':\n                                    this.appendChild(FieldGroupElement.create(context, data));\n                                    break;\n                                case 'select':\n                                    container.appendChild(Element.Select.create(context, data));\n                                    this.appendChild(container);\n                                    break;\n                                case 'checkbox':\n                                    label.insertBefore(Element.Checkbox.create(context, data), label.firstChild);\n                                    container.appendChild(label);\n                                    container.classList.add('checkbox');\n                                    this.appendChild(container);\n                                    break;\n                                case 'radio':\n                                    label.insertBefore(Element.Radio.create(context, data), label.firstChild);\n                                    container.appendChild(label);\n                                    container.classList.add('radio');\n                                    this.appendChild(container);\n                                    break;\n                                case 'text':\n                                    container.appendChild(Element.Input.create(context, data));\n                                    this.appendChild(container);\n                                    break;\n                                case 'textarea':\n                                    container.appendChild(Element.Textarea.create(context, data));\n                                    this.appendChild(container);\n                                    break;\n                                default:\n                                    console.log('<!> field no defined');\n                                    console.log(data);\n                                    break;\n                            }\n                            this.fire('field-create', this);\n                        };\n                        Field.prototype.hydrateValidators = function (data) {\n                            var validators = (data.validators == undefined ? [] : data.validators);\n                            if (data.name == 'email' && data.type != 'hidden')\n                                validators.push('Com.Threeds.Validator.Email');\n                            if (data.required)\n                                validators.push('Com.Threeds.Validator.Require');\n                            if (validators.length)\n                                data.validators = validators;\n                        };\n                        Field.prototype.handleError = function (e, detail) {\n                            this.displayError(detail);\n                        };\n                        Field.prototype.displayError = function (detail) {\n                            this.error = detail;\n                            if (this.error == undefined || this.error == '') {\n                                this.classList.remove('has-error');\n                            }\n                            else {\n                                this.classList.add('has-error');\n                            }\n                        };\n                        Field.prototype.handleHide = function (e, status) {\n                            if (status) {\n                                this.classList.remove('hide');\n                            }\n                            else {\n                                this.classList.add('hide');\n                            }\n                        };\n                        __decorate([\n                            property({ type: String })\n                        ], Field.prototype, \"error\", void 0);\n                        __decorate([\n                            listen(\"error\")\n                        ], Field.prototype, \"handleError\", null);\n                        __decorate([\n                            listen('field-hide')\n                        ], Field.prototype, \"handleHide\", null);\n                        Field = __decorate([\n                            component('field-element'),\n                            extend(\"div\"),\n                            template(\"<template is=\\\"dom-if\\\" if=\\\"{{error}}\\\"><div class=\\\"alert alert-danger\\\">{{error}}</div></template>\")\n                        ], Field);\n                        return Field;\n                    }(AbstractPolymerElement));\n                    Element.Field = Field;\n                })(Element = Form.Element || (Form.Element = {}));\n            })(Form = Component.Form || (Component.Form = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nCom.Threeds.Component.Form.Element.Field.register();\n","/// <reference path=\"../../../../bower_components/polymer-ts/polymer-ts.d.ts\"/>\n/// <reference path=\"../../../Component/Form/Element/Input.ts\" />\n/// <reference path=\"../../../Component/Form/Element/Textarea.ts\" />\n/// <reference path=\"../../../Component/Form/Element/Checkbox.ts\" />\n/// <reference path=\"../../../Component/Form/Element/Radio.ts\" />\n/// <reference path=\"../../../Component/Form/Element/Select.ts\" />\n/// <reference path=\"../../../Component/Form/Element/FieldGroup.ts\" />\n/// <reference path=\"../../../Element/AbstractPolymerElement.ts\" />\n/// <reference path=\"../../../Validator/Email.ts\" />\n/// <reference path=\"../../../Validator/Email.ts\" />\n\nnamespace Com.Threeds.Component.Form.Element {\n\n    import AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n\n    @component('field-element')\n    @extend(\"div\")\n    @template(`<template is=\"dom-if\" if=\"{{error}}\"><div class=\"alert alert-danger\">{{error}}</div></template>`)\n    export class Field extends AbstractPolymerElement {\n\n        @property({type: String})\n            error:string;\n\n        data:any;\n\n        constructor(context:any, data:any) {\n            this.hydrateValidators(data);\n            super(data);\n            this.data = data;\n            this.classList.add('form-group')\n            this.classList.add('row')\n            if (typeof data.required != 'undefined' && typeof data.required) {\n                this.classList.add('field-required');\n            }\n            this.classList.add(`field-${data.name}`);\n            this.append(context, data);\n        }\n\n        label(context:any, data:Object):HTMLLabelElement {\n            if (!context.settings.display.label) return;\n\n            let label:HTMLLabelElement = document.createElement('label');\n            label.htmlFor = data.name;\n\n            if (data.type != 'checkbox' && data.type != 'radio') {\n                label.className = 'col-sm-2 form-control-label';\n            } else {\n                label.className = 'form-control-label';\n            }\n\n            label.appendChild(document.createTextNode(this.data.label));\n            label.appendChild(document.createTextNode(context.settings.styling.label.suffixe));\n\n            if (typeof data.required != 'undefined' && data.required && context.settings.styling.label.mandatory != '') {\n                let mandatory = document.createElement('span');\n                mandatory.setAttribute('class', 'mandatory');\n                mandatory.innerText = context.settings.styling.label.mandatory;\n                label.appendChild(mandatory);\n            }\n\n\n            return label;\n        }\n\n        container(context:any, data:Object):HTMLDivElement {\n            let type:string = data.type.toLowerCase();\n            let container:HTMLDivElement = document.createElement('div');\n            container.classList.add(context.settings.display.label ? 'col-sm-10' : 'col-sm-12');\n\n            return container;\n        }\n\n\n        append(context:any, data:Object):void {\n            let type:string = data.type.toLowerCase();\n            let container:HTMLDivElement = this.container(context, data);\n            let label:HTMLLabelElement = this.label(context, data);\n            if (type != 'checkbox' && type != 'radio' && context.settings.display.label) {\n                this.appendChild(label);\n            }\n\n            switch (type) {\n                case 'fieldgroup':\n                    this.appendChild(FieldGroupElement.create(context, data));\n                    break;\n                case 'select':\n                    container.appendChild(Select.create(context, data));\n                    this.appendChild(container);\n                    break;\n                case 'checkbox':\n                    label.insertBefore(Checkbox.create(context, data), label.firstChild);\n                    container.appendChild(label);\n                    container.classList.add('checkbox');\n                    this.appendChild(container);\n                    break;\n                case 'radio':\n                    label.insertBefore(Radio.create(context, data), label.firstChild);\n                    container.appendChild(label);\n                    container.classList.add('radio');\n                    this.appendChild(container);\n                    break;\n                case 'text':\n                    container.appendChild(Input.create(context, data));\n                    this.appendChild(container);\n                    break;\n                case 'textarea':\n                    container.appendChild(Textarea.create(context, data));\n                    this.appendChild(container);\n                    break;\n                default :\n                    console.log('<!> field no defined');\n                    console.log(data);\n                    break;\n            }\n\n            this.fire('field-create', this);\n        }\n\n        hydrateValidators(data:Object) {\n            let validators:string[] = (data.validators == undefined ? [] : data.validators);\n\n            if (data.name == 'email' && data.type != 'hidden') validators.push('Com.Threeds.Validator.Email');\n            if (data.required) validators.push('Com.Threeds.Validator.Require');\n\n            if (validators.length) data.validators = validators;\n        }\n\n        @listen(\"error\")\n        handleError(e:Event, detail:string) {\n            this.displayError(detail);\n        }\n\n        displayError(detail:string) {\n            this.error = detail;\n\n            if (this.error == undefined || this.error == '') {\n                this.classList.remove('has-error');\n            } else {\n                this.classList.add('has-error');\n            }\n        }\n\n        @listen('field-hide')\n        handleHide(e:Event, status:string) {\n            if (status) {\n                this.classList.remove('hide');\n            } else {\n                this.classList.add('hide');\n            }\n        }\n\n    }\n\n}\n\nCom.Threeds.Component.Form.Element.Field.register();","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var Form;\n            (function (Form) {\n                var Element;\n                (function (Element) {\n                    var AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n                    var Submit = (function (_super) {\n                        __extends(Submit, _super);\n                        function Submit(context, data) {\n                            _super.call(this, data);\n                            this.type = 'submit';\n                            this.class = 'btn btn-default';\n                        }\n                        __decorate([\n                            property({ type: String, reflectToAttribute: true })\n                        ], Submit.prototype, \"type\", void 0);\n                        __decorate([\n                            property({ type: String, reflectToAttribute: true })\n                        ], Submit.prototype, \"name\", void 0);\n                        __decorate([\n                            property({ type: String })\n                        ], Submit.prototype, \"value\", void 0);\n                        __decorate([\n                            property({ type: String, reflectToAttribute: true })\n                        ], Submit.prototype, \"class\", void 0);\n                        Submit = __decorate([\n                            component('submit-element'),\n                            extend(\"input\")\n                        ], Submit);\n                        return Submit;\n                    }(AbstractPolymerElement));\n                    Element.Submit = Submit;\n                })(Element = Form.Element || (Form.Element = {}));\n            })(Form = Component.Form || (Component.Form = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nCom.Threeds.Component.Form.Element.Submit.register();\n","/// <reference path=\"../../../../bower_components/polymer-ts/polymer-ts.d.ts\"/>\n/// <reference path=\"../../../Element/AbstractPolymerElement.ts\" />\n\nnamespace Com.Threeds.Component.Form.Element {\n\n    import AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n\n    @component('submit-element')\n    @extend(\"input\")\n    export class Submit extends AbstractPolymerElement {\n        @property({type: String, reflectToAttribute: true})\n            type:string = 'submit';\n\n        @property({type: String, reflectToAttribute: true})\n            name:string;\n\n        @property({type: String})\n            value:string;\n\n        @property({type: String, reflectToAttribute: true})\n            class:string = 'btn btn-default';\n\n        constructor(context:any, data:any) {\n            super(data);\n        }\n    }\n}\n\n\nCom.Threeds.Component.Form.Element.Submit.register();\n\n","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var Form;\n            (function (Form) {\n                var Element;\n                (function (Element) {\n                    var AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n                    var SubmitElement = Com.Threeds.Component.Form.Element.Submit;\n                    var Step = (function (_super) {\n                        __extends(Step, _super);\n                        function Step(context, data) {\n                            if (data.success == undefined && !data.success && data.result.config !== undefined)\n                                return;\n                            _super.call(this, data);\n                            this.appendChild(Element.Input.create(context, {\n                                name: \"op\",\n                                type: \"hidden\",\n                                value: data.result.nextAction\n                            }));\n                            for (var k in data.result.config) {\n                                if (data.result.config[k].type.toLowerCase() == 'hidden') {\n                                    this.appendChild(Element.Input.create(context, data.result.config[k]));\n                                }\n                                else if (data.result.config[k].type.toLowerCase() == 'fieldgroup') {\n                                    this.appendChild(Element.FieldGroup.create(context, data.result.config[k]));\n                                }\n                                else {\n                                    this.appendChild(Element.Field.create(context, data.result.config[k]));\n                                }\n                            }\n                            this.appendChild(SubmitElement.create({}));\n                        }\n                        Step = __decorate([\n                            component('step-element'),\n                            extend(\"div\")\n                        ], Step);\n                        return Step;\n                    }(AbstractPolymerElement));\n                    Element.Step = Step;\n                })(Element = Form.Element || (Form.Element = {}));\n            })(Form = Component.Form || (Component.Form = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nCom.Threeds.Component.Form.Element.Step.register();\n","/// <reference path=\"../../../../bower_components/polymer-ts/polymer-ts.d.ts\"/>\n/// <reference path=\"../../../Component/Form/Element/Field.ts\" />\n/// <reference path=\"../../../Component/Form/Element/FieldGroup.ts\" />\n/// <reference path=\"../../../Component/Form/Element/Submit.ts\" />\n/// <reference path=\"../../../Element/AbstractPolymerElement.ts\" />\n/// <reference path=\"../../../Component/Form/Element/Input.ts\" />\n\nnamespace Com.Threeds.Component.Form.Element {\n\n    import AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n    import SubmitElement = Com.Threeds.Component.Form.Element.Submit;\n\n    @component('step-element')\n    @extend(\"div\")\n    export class Step extends AbstractPolymerElement {\n        constructor(context:any, data:any) {\n            if (data.success == undefined && !data.success && data.result.config !== undefined) return;\n            super(data);\n\n\n            this.appendChild(Input.create(context, {\n                name: \"op\",\n                type: \"hidden\",\n                value: data.result.nextAction\n            }));\n\n            for (let k in data.result.config) {\n                if (data.result.config[k].type.toLowerCase() == 'hidden') {\n                    this.appendChild(Input.create(context, data.result.config[k]));\n                } else if (data.result.config[k].type.toLowerCase() == 'fieldgroup') {\n                    this.appendChild(FieldGroup.create(context, data.result.config[k]));\n                } else {\n                    this.appendChild(Field.create(context, data.result.config[k]));\n                }\n            }\n\n            this.appendChild(SubmitElement.create({}));\n        }\n    }\n}\n\nCom.Threeds.Component.Form.Element.Step.register();\n\n","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Core;\n        (function (Core) {\n            var Ajax;\n            (function (Ajax) {\n                var AbstractPlugin = Com.Threeds.Plugin.AbstractPlugin;\n                var AutoComplete = (function (_super) {\n                    __extends(AutoComplete, _super);\n                    function AutoComplete(context, elem, options) {\n                        _super.call(this, elem, options);\n                        this.settings = {\n                            api: {\n                                adapter: 'Com.Threeds.Service.Adapter.Neolane',\n                                serviceName: 'customerAutocomplete'\n                            },\n                            select: function (data) {\n                            }\n                        };\n                        this.context = context;\n                        this.elem = elem;\n                        this.settings = $.extend({}, this.settings, options);\n                        this.service('api')[this.settings.api.serviceName](this, this.settings);\n                    }\n                    AutoComplete.prototype.render = function (context, data) {\n                        console.log('AutoComplete->render->>>>>');\n                        console.log(data);\n                    };\n                    return AutoComplete;\n                }(AbstractPlugin));\n                Ajax.AutoComplete = AutoComplete;\n            })(Ajax = Core.Ajax || (Core.Ajax = {}));\n        })(Core = Threeds.Core || (Threeds.Core = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\n","/// <reference path=\"../../Plugin/AbstractPlugin.ts\" />\n\nnamespace Com.Threeds.Core.Ajax {\n\n    import AbstractPlugin = Com.Threeds.Plugin.AbstractPlugin;\n\n    export class AutoComplete extends AbstractPlugin {\n        context:any;\n\n        public settings:any = {\n            api: {\n                adapter: 'Com.Threeds.Service.Adapter.Neolane',\n                serviceName: 'customerAutocomplete'\n            },\n            select: function (data){\n\n            }\n        };\n\n        public elem:any;\n\n\n        constructor(context:any, elem:any, options:Object) {\n            super(elem, options);\n            this.context = context;\n            this.elem = elem;\n            this.settings = $.extend({}, this.settings, options);\n\n            this.service('api')[this.settings.api.serviceName](this, this.settings);\n        }\n\n        render(context:any, data:any) {\n            console.log('AutoComplete->render->>>>>');\n            console.log(data);\n        }\n\n\n    }\n}\n","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var Form;\n            (function (Form) {\n                var Element;\n                (function (Element) {\n                    var Behavior;\n                    (function (Behavior) {\n                        var Neolane;\n                        (function (Neolane) {\n                            var FormBehavior = (function (_super) {\n                                __extends(FormBehavior, _super);\n                                function FormBehavior() {\n                                    _super.apply(this, arguments);\n                                }\n                                FormBehavior.prototype.action = function (form, data) {\n                                    if (Object.isDefined(data, 'result.config')) {\n                                        form.update(data);\n                                    }\n                                    else if (Object.isDefined(data, 'result.thankYouPage')) {\n                                        if (data.result.properties.displayThankYou) {\n                                            form.success(data.result.thankYouPage);\n                                            if (data.result.properties.openUrl) {\n                                            }\n                                        }\n                                        else if (data.result.properties.openUrl) {\n                                            form.redirect(data.result.asset.url);\n                                        }\n                                    }\n                                    else if (Object.isDefined(data, 'result.properties.content') && Object.isDefined(data, 'result.properties.redirect') && data.result.properties.redirect) {\n                                        form.redirect(data.result.properties.content);\n                                    }\n                                    else if (Object.isDefined(data, 'result.properties.content') && Object.isDefined(data, 'result.properties.redirect') && !data.result.properties.redirect) {\n                                        form.warning(data.result.properties.content);\n                                    }\n                                    else if (Object.isDefined(data, 'errors.0.error.message')) {\n                                        form.warning(data.errors[0].error.message);\n                                    }\n                                    else if (Object.isDefined(data, 'errors')) {\n                                        form.errors = data.errors.fields;\n                                    }\n                                };\n                                FormBehavior.prototype._onCreate = function (e, elem) {\n                                    var context = this;\n                                    if (elem.data.name == 'company') {\n                                    }\n                                };\n                                FormBehavior.prototype._onChange = function (e, elem) {\n                                    for (var n = 0; n < (Polymer.dom(this).node.length); n++) {\n                                        if (typeof Polymer.dom(this).node[n].parentField != 'undefined' && elem.name == Polymer.dom(this).node[n].parentField) {\n                                            for (var i = 0; i < (Polymer.dom(this).node.length); i++) {\n                                                if (typeof Polymer.dom(this).node[i].name != 'undefined' && Polymer.dom(this).node[i].name.toLowerCase() == Polymer.dom(this).node[n].name.toLowerCase()) {\n                                                    Polymer.dom(this).node[i].update();\n                                                }\n                                            }\n                                        }\n                                    }\n                                };\n                                FormBehavior.prototype._onSubmit = function (e) {\n                                    if (e)\n                                        e.preventDefault();\n                                    this.submit();\n                                    return false;\n                                };\n                                FormBehavior.prototype.submit = function () {\n                                    this.valid();\n                                    if (!Object.keys(this.errors).length)\n                                        this.post();\n                                };\n                                FormBehavior.prototype.post = function () {\n                                    var data = Com.Threeds.Component.Form.Element.Form.serialize(this);\n                                    this.context.service('api').post(this, data);\n                                };\n                                FormBehavior.prototype.render = function (type, data) {\n                                    if (type == 'form')\n                                        this.dispatch(data);\n                                };\n                                __decorate([\n                                    listen('field-create')\n                                ], FormBehavior.prototype, \"_onCreate\", null);\n                                __decorate([\n                                    listen('field-value-changed')\n                                ], FormBehavior.prototype, \"_onChange\", null);\n                                __decorate([\n                                    listen('submit')\n                                ], FormBehavior.prototype, \"_onSubmit\", null);\n                                return FormBehavior;\n                            }(polymer.Base));\n                            Neolane.FormBehavior = FormBehavior;\n                        })(Neolane = Behavior.Neolane || (Behavior.Neolane = {}));\n                    })(Behavior = Element.Behavior || (Element.Behavior = {}));\n                })(Element = Form.Element || (Form.Element = {}));\n            })(Form = Component.Form || (Component.Form = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nObject.isDefined = function (obj, prop) {\n    var parts = prop.split('.');\n    for (var i = 0, l = parts.length; i < l; i++) {\n        var part = parts[i];\n        if (obj !== null && typeof obj === \"object\" && part in obj) {\n            obj = obj[part];\n        }\n        else {\n            return false;\n        }\n    }\n    return true;\n};\nObject.isEmpty = function (obj, prop) {\n    var parts = prop.split('.');\n    for (var i = 0, l = parts.length; i < l; i++) {\n        var part = parts[i];\n        if (obj !== null && typeof obj === \"object\" && part in obj) {\n            obj = obj[part];\n        }\n        else {\n            return false;\n        }\n    }\n    return (obj == '' ? true : false);\n};\n","/// <reference path=\"../../../../../../bower_components/polymer-ts/polymer-ts.d.ts\"/>\n/// <reference path=\"../../../../../../typings/jquery/jquery.d.ts\" />\n/// <reference path=\"../../../../../Core/Ajax/AutoComplete.ts\" />\n\nnamespace Com.Threeds.Component.Form.Element.Behavior.Neolane {\n\n\n    import AutoComplete = Com.Threeds.Core.Ajax.AutoComplete;\n\n    export interface FormBehavior {\n        valid(): void;\n        errors: any;\n        context: any;\n        dispatch: any;\n    }\n\n    export class FormBehavior extends polymer.Base {\n\n        public action(form:any, data:any):void {\n\n            if (Object.isDefined(data, 'result.config')) {\n                form.update(data);\n            } else if (Object.isDefined(data, 'result.thankYouPage')) {\n\n                if (data.result.properties.displayThankYou) {\n                    form.success(data.result.thankYouPage);\n\n                    if (data.result.properties.openUrl) {\n                        //var w = window.open(data.result.asset.url, '_blank');\n                        //w.focus();\n                    }\n                } else if (data.result.properties.openUrl) {\n                    form.redirect(data.result.asset.url);\n                }\n            } else if (Object.isDefined(data, 'result.properties.content') && Object.isDefined(data, 'result.properties.redirect') && data.result.properties.redirect) {\n                form.redirect(data.result.properties.content);\n            } else if (Object.isDefined(data, 'result.properties.content') && Object.isDefined(data, 'result.properties.redirect') && !data.result.properties.redirect) {\n                form.warning(data.result.properties.content);\n            } else if (Object.isDefined(data, 'errors.0.error.message')) {\n                form.warning(data.errors[0].error.message);\n            } else if (Object.isDefined(data, 'errors')) {\n                form.errors = data.errors.fields;\n            }\n        }\n\n        @listen('field-create')\n        _onCreate(e:Event, elem:any) {\n            let context = this;\n\n            if(elem.data.name == 'company'){\n                //new AutoComplete(this, document.querySelector('#company'), {lorem:'lorem ipsum'});\n\n                /*\n                    $('#company').autocomplete({\n                        source: function (requete, reponse) {\n                            $.ajax({\n                                url: 'http://dassault-test.neolane.net/dsx/dnbWebservice.jssp',\n                                dataType: 'jsonp',\n                                data: {\n                                    query: $('#company').val(),\n                                    iso: $('#country').val()\n                                },\n                                success: function (data) {\n                                    reponse($.map(data.dnbReponse.responseDetail.candidate, function (objet) {\n                                        return {\n                                            label: objet.companyName,\n                                            value: objet.companyName,\n                                            duns: objet.duns,\n                                            postalCode: objet.postalCode,\n                                            city: objet.city,\n                                            address1: objet.address1,\n                                            address2: objet.address2,\n                                            stateCode: objet.stateCode,\n                                        };\n                                    }));\n                                },\n\n                            });\n                        },\n                        select: function(event, ui) {\n                            $(this).val(ui.item.value);\n\n                            context.append({\n                                name: \"duns\",\n                                type: \"hidden\",\n                                value: ui.item.duns\n                            }).append({\n                                name: \"zipCode\",\n                                type: \"hidden\",\n                                value: ui.item.postalCode\n                            }).append({\n                                name: \"city\",\n                                type: \"hidden\",\n                                value: ui.item.city\n                            }).append({\n                                name: \"address1\",\n                                type: \"hidden\",\n                                value: ui.item.address1\n                            }).append({\n                                name: \"address2\",\n                                type: \"hidden\",\n                                value: ui.item.address2\n                            }).append({\n                                name: \"state\",\n                                type: \"hidden\",\n                                value: ui.item.stateCode\n                            });\n\n\n\n                            return false;\n                        }\n                    });*/\n            }\n\n\n        }\n\n        @listen('field-value-changed')\n        _onChange(e:Event, elem:any) {\n            for (let n = 0; n < ((<any>Polymer.dom(this)).node.length); n++) {\n                if (typeof  (<any>Polymer.dom(this)).node[n].parentField != 'undefined' && elem.name == Polymer.dom(this).node[n].parentField) {\n                    for (let i = 0; i < ((<any>Polymer.dom(this)).node.length); i++) {\n                        if (typeof  (<any>Polymer.dom(this)).node[i].name != 'undefined' && Polymer.dom(this).node[i].name.toLowerCase() == Polymer.dom(this).node[n].name.toLowerCase()) {\n                            Polymer.dom(this).node[i].update();\n                        }\n                    }\n                }\n            }\n        }\n\n        @listen('submit')\n        _onSubmit(e:Event) {\n            if (e) e.preventDefault();\n            this.submit();\n            return false;\n        }\n\n        submit():void {\n            this.valid();\n            if (!Object.keys(this.errors).length) this.post();\n        }\n\n        post():void {\n            let data:string = Com.Threeds.Component.Form.Element.Form.serialize(this);\n            this.context.service('api').post(this, data);\n        }\n\n\n        render(type:string, data:any):void {\n            if (type == 'form') this.dispatch(data);\n        }\n    }\n}\n\ninterface Object {\n    isDefined(obj:any, prop:string): boolean;\n    isEmpty(obj:any, prop:string): boolean;\n}\n\nObject.isDefined = function (obj:any, prop:string) {\n    var parts = prop.split('.');\n    for (var i = 0, l = parts.length; i < l; i++) {\n        var part = parts[i];\n        if (obj !== null && typeof obj === \"object\" && part in obj) {\n            obj = obj[part];\n        } else {\n            return false;\n        }\n    }\n    return true;\n}\n\nObject.isEmpty = function (obj:any, prop:string):boolean {\n    var parts = prop.split('.');\n    for (var i = 0, l = parts.length; i < l; i++) {\n        var part = parts[i];\n        if (obj !== null && typeof obj === \"object\" && part in obj) {\n            obj = obj[part];\n        } else {\n            return false;\n        }\n    }\n\n\n    return (obj == '' ? true : false);\n}","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var Form;\n            (function (Form_1) {\n                var Element;\n                (function (Element) {\n                    var AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n                    var StepElement = Com.Threeds.Component.Form.Element.Step;\n                    var Form = (function (_super) {\n                        __extends(Form, _super);\n                        function Form(context, data) {\n                            _super.call(this, data);\n                            this._currentPosition = 0;\n                            this._steps = [];\n                            this._errors = [];\n                            this.context = context;\n                            this.dispatch(data);\n                        }\n                        Object.defineProperty(Form.prototype, \"currentPosition\", {\n                            get: function () {\n                                return this._currentPosition;\n                            },\n                            set: function (value) {\n                                if (typeof this.context.settings.hook.setCurrentPosition == 'function') {\n                                    this.context.settings.hook.setCurrentPosition(this, value);\n                                }\n                                this._currentPosition = value;\n                            },\n                            enumerable: true,\n                            configurable: true\n                        });\n                        Object.defineProperty(Form.prototype, \"settings\", {\n                            get: function () {\n                                return this.context.settings;\n                            },\n                            enumerable: true,\n                            configurable: true\n                        });\n                        Object.defineProperty(Form.prototype, \"errors\", {\n                            get: function () {\n                                return this._errors;\n                            },\n                            set: function (value) {\n                                this._errors = value;\n                                for (var i = 0; i < (Polymer.dom(this).node.length); i++) {\n                                    if (typeof Polymer.dom(this).node[i].displayError === 'function') {\n                                        for (var k in this._errors) {\n                                            if (Polymer.dom(this).node[i].name == k) {\n                                                Polymer.dom(this).node[i].displayError(this._errors[k]);\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            enumerable: true,\n                            configurable: true\n                        });\n                        Form.prototype.valid = function () {\n                            this._errors = [];\n                            for (var i = 0; i < (Polymer.dom(this).node.length); i++) {\n                                if (typeof Polymer.dom(this).node[i].isValid === 'function') {\n                                    if (Polymer.dom(this).node[i].isValid() == true)\n                                        this._errors[Polymer.dom(this).node[i].name] = Polymer.dom(this).node[i].errorMessage;\n                                }\n                            }\n                        };\n                        Form.prototype.dispatch = function (data) {\n                            if (typeof this.behaviors[0] != undefined && typeof this.behaviors[0].action == 'function') {\n                                this.behaviors[0].action(this, data);\n                            }\n                            else {\n                                console.log('Uncaught TypeError: this.behaviors[0].action is not a function');\n                            }\n                        };\n                        Form.prototype.clear = function () {\n                            while (Polymer.dom(this).firstChild)\n                                Polymer.dom(this).removeChild(Polymer.dom(this).firstChild);\n                            this.innerHTML = '';\n                        };\n                        Form.prototype.add = function (data) {\n                            if (!(Polymer.dom(this).node.length)) {\n                                this._steps.push(data);\n                                this.currentPosition = 0;\n                                return true;\n                            }\n                            var name;\n                            for (var n = 0; n < (Polymer.dom(this).node.length); n++) {\n                                if (Polymer.dom(this).node[n].name == undefined)\n                                    continue;\n                                name = Polymer.dom(this).node[n].name;\n                                for (var k in data.result.config) {\n                                    if (data.result.config[k].name = name && data.result.config[k].type != 'hidden') {\n                                        this._steps.push(data);\n                                        this.currentPosition++;\n                                        return true;\n                                    }\n                                }\n                            }\n                            return false;\n                        };\n                        Form.prototype.update = function (data) {\n                            this.add(data);\n                            this.clear();\n                            this.appendChild(StepElement.create(this.context, data));\n                        };\n                        Form.prototype.goTo = function (id) {\n                            if (typeof this._steps[id] != \"undefined\") {\n                                this.clear();\n                                this.appendChild(StepElement.create(this.context, this._steps[id]));\n                                this.currentPosition = id;\n                            }\n                        };\n                        Form.prototype.prev = function () {\n                            var id = (this.currentPosition - 1);\n                            this.goTo(id);\n                        };\n                        Form.prototype.next = function () {\n                            var id = (this.currentPosition + 1);\n                            this.goTo(id);\n                        };\n                        Form.prototype.append = function (data) {\n                            for (var i = 0; i < (Polymer.dom(this).node.length); i++) {\n                                if (typeof Polymer.dom(this).node[i].name != 'undefined' && Polymer.dom(this).node[i].name == data.name) {\n                                    Polymer.dom(this).node[i].value = data.value;\n                                    return this;\n                                }\n                            }\n                            this.insertBefore(Element.Input.create(this, data), this.firstChild);\n                            return this;\n                        };\n                        Form.prototype.success = function (data) {\n                            if (typeof this.context.settings.hook.success == 'function') {\n                                this.context.settings.hook.success(this, data);\n                            }\n                            else {\n                                this.clear();\n                                this.innerHTML = \"<h1>\" + data.title + \"</h1>\" + data.content;\n                            }\n                        };\n                        Form.prototype.warning = function (message) {\n                            if (typeof this.context.settings.hook.warning == 'function') {\n                                this.context.settings.hook.warning(this, message);\n                            }\n                            else {\n                                this.clear();\n                                this.innerHTML = message;\n                            }\n                        };\n                        Form.prototype.redirect = function (url) {\n                            if (typeof this.context.settings.hook.redirect == 'function') {\n                                this.context.settings.hook.redirect(this, url);\n                            }\n                            else {\n                                window.location = url;\n                            }\n                        };\n                        Form.serialize = function (form) {\n                            if (!form || form.nodeName !== \"FORM\") {\n                                return;\n                            }\n                            var i, j, dict = {};\n                            for (i = form.elements.length - 1; i >= 0; i = i - 1) {\n                                if (form.elements[i].name === \"\" || typeof form.elements[i].name == 'undefined') {\n                                    continue;\n                                }\n                                switch (form.elements[i].nodeName) {\n                                    case 'INPUT':\n                                        switch (form.elements[i].type) {\n                                            case 'text':\n                                            case 'hidden':\n                                            case 'password':\n                                            case 'button':\n                                            case 'reset':\n                                            case 'submit':\n                                                dict[form.elements[i].name] = form.elements[i].value;\n                                                break;\n                                            case 'checkbox':\n                                            case 'radio':\n                                                if (form.elements[i].checked) {\n                                                    dict[form.elements[i].name] = encodeURIComponent(form.elements[i].value);\n                                                }\n                                                break;\n                                            case 'file':\n                                                break;\n                                        }\n                                        break;\n                                    case 'TEXTAREA':\n                                        dict[form.elements[i].name] = encodeURIComponent(form.elements[i].value);\n                                        break;\n                                    case 'SELECT':\n                                        switch (form.elements[i].type) {\n                                            case 'select-one':\n                                                dict[form.elements[i].name] = encodeURIComponent(form.elements[i].value);\n                                                break;\n                                            case 'select-multiple':\n                                                for (j = form.elements[i].options.length - 1; j >= 0; j = j - 1) {\n                                                    if (form.elements[i].options[j].selected) {\n                                                        dict[form.elements[i].name] = encodeURIComponent(form.elements[i].options[j].value);\n                                                    }\n                                                }\n                                                break;\n                                        }\n                                        break;\n                                    case 'BUTTON':\n                                        switch (form.elements[i].type) {\n                                            case 'reset':\n                                            case 'submit':\n                                            case 'button':\n                                                dict[form.elements[i].name] = encodeURIComponent(form.elements[i].value);\n                                                break;\n                                        }\n                                        break;\n                                }\n                            }\n                            return dict;\n                        };\n                        __decorate([\n                            property({ type: String, reflectToAttribute: true })\n                        ], Form.prototype, \"id\", void 0);\n                        __decorate([\n                            property({ type: String, reflectToAttribute: true })\n                        ], Form.prototype, \"name\", void 0);\n                        __decorate([\n                            property({ type: String, reflectToAttribute: true })\n                        ], Form.prototype, \"method\", void 0);\n                        __decorate([\n                            property({ type: String, reflectToAttribute: true })\n                        ], Form.prototype, \"action\", void 0);\n                        Form = __decorate([\n                            component('form-element'),\n                            extend(\"form\"),\n                            behavior(Com.Threeds.Component.Form.Element.Behavior.Neolane.FormBehavior)\n                        ], Form);\n                        return Form;\n                    }(AbstractPolymerElement));\n                    Element.Form = Form;\n                })(Element = Form_1.Element || (Form_1.Element = {}));\n            })(Form = Component.Form || (Component.Form = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nCom.Threeds.Component.Form.Element.Form.register();\n","/// <reference path=\"../../../../bower_components/polymer-ts/polymer-ts.d.ts\"/>\n/// <reference path=\"../../../Component/Form/Element/Step.ts\" />\n/// <reference path=\"../../../Element/AbstractPolymerElement.ts\" />\n/// <reference path=\"../../../Component/Form/Element/Behavior/Neolane/FormBehavior.ts\" />\n\nnamespace Com.Threeds.Component.Form.Element {\n\n    import AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n    import StepElement = Com.Threeds.Component.Form.Element.Step;\n\n    export interface Map<T> {\n        [K: string]: T;\n    }\n\n    export interface Form {\n        behaviors: any;\n    }\n\n    @component('form-element')\n    @extend(\"form\")\n    @behavior(Com.Threeds.Component.Form.Element.Behavior.Neolane.FormBehavior)\n    export class Form extends AbstractPolymerElement {\n        context:any;\n\n        @property({type: String, reflectToAttribute: true})\n            id:string;\n\n        @property({type: String, reflectToAttribute: true})\n            name:string;\n\n        @property({type: String, reflectToAttribute: true})\n            method:string;\n\n        @property({type: String, reflectToAttribute: true})\n            action:string;\n\n        private _currentPosition:number = 0;\n\n        public get currentPosition():number {\n            return this._currentPosition;\n        }\n\n        public set currentPosition(value:number) {\n            if (typeof this.context.settings.hook.setCurrentPosition == 'function') {\n                this.context.settings.hook.setCurrentPosition(this, value);\n            }\n\n            this._currentPosition = value;\n        }\n\n        public _steps:Object[] = [];\n\n        public _errors:Object[] = [];\n\n        constructor(context:any, data:any) {\n            super(data);\n            this.context = context;\n            this.dispatch(data);\n        }\n\n        public get settings():any {\n            return this.context.settings;\n        }\n\n        public get errors():Object[] {\n\n            return <Array> this._errors;\n        }\n\n        public set errors(value:Object[]) {\n            this._errors = value;\n\n            for (let i = 0; i < ((<any>Polymer.dom(this)).node.length); i++) {\n                if (typeof  (<any>Polymer.dom(this)).node[i].displayError === 'function') {\n                    for (var k in this._errors) {\n                        if ((<any>Polymer.dom(this)).node[i].name == k) {\n                            (<any>Polymer.dom(this)).node[i].displayError(this._errors[k]);\n                        }\n                    }\n                }\n            }\n        }\n\n        public valid() {\n            this._errors = [];\n\n            for (let i = 0; i < ((<any>Polymer.dom(this)).node.length); i++) {\n                if (typeof  (<any>Polymer.dom(this)).node[i].isValid === 'function') {\n                    if ((<any>Polymer.dom(this)).node[i].isValid() == true) this._errors[(<any>Polymer.dom(this)).node[i].name] = (<any>Polymer.dom(this)).node[i].errorMessage;\n                }\n            }\n        }\n\n        dispatch(data:any) {\n            if (typeof this.behaviors[0] != undefined && typeof this.behaviors[0].action == 'function') {\n                this.behaviors[0].action(this, data);\n            } else {\n                console.log('Uncaught TypeError: this.behaviors[0].action is not a function');\n            }\n        }\n\n        clear() {\n            while (Polymer.dom(this).firstChild) Polymer.dom(this).removeChild(Polymer.dom(this).firstChild);\n            this.innerHTML = '';\n        }\n\n\n        add(data:any) {\n            if (!((<any>Polymer.dom(this)).node.length)) {\n                this._steps.push(data)\n                this.currentPosition = 0;\n                return true;\n            }\n\n            let name:string;\n            for (let n = 0; n < ((<any>Polymer.dom(this)).node.length); n++) {\n                if (Polymer.dom(this).node[n].name == undefined) continue;\n                name = Polymer.dom(this).node[n].name;\n                for (let k in data.result.config) {\n                    if (data.result.config[k].name = name && data.result.config[k].type != 'hidden') {\n                        this._steps.push(data)\n                        this.currentPosition++;\n                        return true;\n                    }\n                }\n            }\n\n            return false;\n        }\n\n        update(data:any) {\n            this.add(data);\n            this.clear();\n            this.appendChild(StepElement.create(this.context, data));\n        }\n\n        goTo(id:number):void {\n            if (typeof this._steps[id] != \"undefined\") {\n                this.clear();\n                this.appendChild(StepElement.create(this.context, this._steps[id]));\n                this.currentPosition = id;\n            }\n        }\n\n        prev():void {\n            let id:number = (this.currentPosition - 1);\n            this.goTo(id);\n        }\n\n        next():void {\n            let id:number = (this.currentPosition + 1);\n            this.goTo(id);\n        }\n\n        append(data:any):Form {\n            for (let i = 0; i < ((<any>Polymer.dom(this)).node.length); i++) {\n                if (typeof  (<any>Polymer.dom(this)).node[i].name != 'undefined' && Polymer.dom(this).node[i].name == data.name) {\n                    Polymer.dom(this).node[i].value = data.value;\n                    return this;\n                }\n            }\n\n            this.insertBefore(Input.create(this, data), this.firstChild);\n\n            return this;\n        }\n\n        success(data:any) {\n            if (typeof this.context.settings.hook.success == 'function') {\n                this.context.settings.hook.success(this, data);\n            } else {\n                this.clear();\n                this.innerHTML = `<h1>${data.title}</h1>${data.content}`;\n            }\n        }\n\n        warning(message:string) {\n            if (typeof this.context.settings.hook.warning == 'function') {\n                this.context.settings.hook.warning(this, message);\n            } else {\n                this.clear();\n                this.innerHTML = message;\n            }\n        }\n\n        redirect(url:string) {\n            if (typeof this.context.settings.hook.redirect == 'function') {\n                this.context.settings.hook.redirect(this, url);\n            } else {\n                window.location = <any>url;\n            }\n        }\n\n        static serialize(form:any):string {\n            if (!form || form.nodeName !== \"FORM\") {\n                return;\n            }\n\n            var i:number, j:number, dict:Map<string> = {};\n            for (i = form.elements.length - 1; i >= 0; i = i - 1) {\n                if (form.elements[i].name === \"\" || typeof form.elements[i].name == 'undefined') {\n                    continue;\n                }\n\n                switch (form.elements[i].nodeName) {\n                    case 'INPUT':\n                        switch (form.elements[i].type) {\n                            case 'text':\n                            case 'hidden':\n                            case 'password':\n                            case 'button':\n                            case 'reset':\n                            case 'submit':\n                                dict[form.elements[i].name] = form.elements[i].value;\n                                break;\n                            case 'checkbox':\n                            case 'radio':\n                                if (form.elements[i].checked) {\n                                    dict[form.elements[i].name] = encodeURIComponent(form.elements[i].value);\n                                }\n                                break;\n                            case 'file':\n                                break;\n                        }\n                        break;\n                    case 'TEXTAREA':\n                        dict[form.elements[i].name] = encodeURIComponent(form.elements[i].value);\n                        break;\n                    case 'SELECT':\n                        switch (form.elements[i].type) {\n                            case 'select-one':\n                                dict[form.elements[i].name] = encodeURIComponent(form.elements[i].value);\n                                break;\n                            case 'select-multiple':\n                                for (j = form.elements[i].options.length - 1; j >= 0; j = j - 1) {\n                                    if (form.elements[i].options[j].selected) {\n                                        dict[form.elements[i].name] = encodeURIComponent(form.elements[i].options[j].value);\n                                    }\n                                }\n                                break;\n                        }\n                        break;\n                    case 'BUTTON':\n                        switch (form.elements[i].type) {\n                            case 'reset':\n                            case 'submit':\n                            case 'button':\n                                dict[form.elements[i].name] = encodeURIComponent(form.elements[i].value);\n                                break;\n                        }\n                        break;\n                }\n            }\n\n            return dict;\n        }\n    }\n}\n\nCom.Threeds.Component.Form.Element.Form.register();\n\n","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var Form;\n            (function (Form_1) {\n                var AbstractPlugin = Com.Threeds.Plugin.AbstractPlugin;\n                var Form = Com.Threeds.Component.Form.Element.Form;\n                var Plugin = (function (_super) {\n                    __extends(Plugin, _super);\n                    function Plugin(elem, options) {\n                        _super.call(this, elem, options);\n                        this.settings = {\n                            id: 'LDP6312',\n                            display: {\n                                label: true,\n                                placeholder: true,\n                            },\n                            styling: {\n                                label: {\n                                    suffixe: ' : ',\n                                    mandatory: ' * '\n                                }\n                            },\n                            api: {\n                                adapter: 'Com.Threeds.Service.Adapter.Neolane',\n                                url: 'http://dassault-test.neolane.net/dsx/lp_api.jssp',\n                            },\n                            hook: {\n                                render: undefined,\n                                success: undefined,\n                                redirect: undefined,\n                                warning: undefined,\n                                setCurrentPosition: undefined,\n                            },\n                        };\n                        this.settings = $.extend({}, this.settings, options);\n                        this.service('api').form(this, {});\n                    }\n                    Plugin.prototype.render = function (type, data) {\n                        if (typeof this.settings.hook.render == 'function') {\n                            this.settings.hook.render(this, type, data);\n                        }\n                        else {\n                            this.elem.append(Form.create(this, data));\n                        }\n                    };\n                    return Plugin;\n                }(AbstractPlugin));\n                Form_1.Plugin = Plugin;\n                $.namespace('threeds', {\n                    form: function (options) {\n                        return new Plugin(this, options);\n                    }\n                });\n            })(Form = Component.Form || (Component.Form = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\n","/// <reference path=\"../../../typings/jquery/jquery.d.ts\" />\n/// <reference path=\"../../Service/Adapter/Exalead.ts\" />\n/// <reference path=\"../../Service/ServiceManager.ts\" />\n/// <reference path=\"../../Plugin/AbstractPlugin.ts\" />\n/// <reference path=\"../../Component/Form/Element/Form.ts\" />\n/// <reference path=\"../../I18n/Translator.ts\" />\n/// <reference path=\"../../Core/Ajax/AutoComplete.ts\" />\n\n\n\ninterface Document {\n    registerElement(tagName:string, implementation:any):any;\n}\n\ninterface JQuery {\n    masonry(data?:any, options?:any): JQuery;\n    chosen(data?:any, options?:any): JQuery;\n    imagesLoaded(data?:any, options?:any): JQuery;\n    always(data?:any, options?:any): JQuery;\n    done(data?:any, options?:any): JQuery;\n    fail(data?:any, options?:any): JQuery;\n    progress(data?:any, options?:any): JQuery;\n}\n\nnamespace Com.Threeds.Component.Form {\n\n    import AbstractPlugin = Com.Threeds.Plugin.AbstractPlugin;\n    import Form = Com.Threeds.Component.Form.Element.Form;\n\n    export class Plugin extends AbstractPlugin {\n\n        public settings:any = {\n            id: 'LDP6312',\n            display: {\n                label: true,\n                placeholder: true,\n            },\n            styling: {\n                label:{\n                    suffixe:' : ',\n                    mandatory:' * '\n                }\n            },\n            api: {\n                adapter: 'Com.Threeds.Service.Adapter.Neolane',\n                url: 'http://dassault-test.neolane.net/dsx/lp_api.jssp',\n            },\n            hook: {\n                render: undefined,\n                success: undefined,\n                redirect: undefined,\n                warning: undefined,\n                setCurrentPosition: undefined,\n            },\n\n        };\n\n        constructor(elem:any, options:Object) {\n            super(elem, options);\n\n            this.settings = $.extend({}, this.settings, options);\n            this.service('api').form(this, {});\n        }\n\n        render(type:string, data:any):void {\n            if(typeof this.settings.hook.render == 'function'){\n                this.settings.hook.render(this, type, data);\n            } else {\n                this.elem.append(Form.create(this, data));\n            }\n        }\n    }\n\n    $.namespace('threeds', {\n        form: function (options:Object) {\n            return new Plugin(this, options);\n        }\n    });\n}\n","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var LandingPage;\n            (function (LandingPage) {\n                var AbstractPlugin = Com.Threeds.Plugin.AbstractPlugin;\n                var Form = Com.Threeds.Component.Form.Element.Form;\n                var Plugin = (function (_super) {\n                    __extends(Plugin, _super);\n                    function Plugin(elem, options) {\n                        _super.call(this, elem, options);\n                        this.settings = {\n                            id: 'LDP6312',\n                            type: 'download',\n                            steps: {\n                                0: {\n                                    title: 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua',\n                                    button: 'Submit'\n                                },\n                                1: {\n                                    title: 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua',\n                                    button: 'download'\n                                },\n                            },\n                            thankyou: {\n                                title: 'Step 1',\n                                content: 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua',\n                            },\n                            error: {\n                                title: 'Step 1',\n                                content: 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua'\n                            },\n                            api: {\n                                adapter: 'Com.Threeds.Service.Adapter.Neolane',\n                                url: 'http://dassault-test.neolane.net/dsx/lp_api.jssp',\n                            },\n                            callback: {\n                                success: undefined\n                            }\n                        };\n                        this.settings = $.extend({}, this.settings, options);\n                        this.service('api').form(this, {});\n                    }\n                    Plugin.prototype.render = function (type, data) {\n                        if (typeof this.settings.hook.render == 'function') {\n                            this.settings.hook.render(this, type, data);\n                        }\n                        else {\n                            this.elem.append(Form.create(this, data));\n                        }\n                    };\n                    return Plugin;\n                }(AbstractPlugin));\n                LandingPage.Plugin = Plugin;\n                $.namespace('threeds', {\n                    landingPage: function (options) {\n                        return new Plugin(this, options);\n                    }\n                });\n            })(LandingPage = Component.LandingPage || (Component.LandingPage = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\n","/// <reference path=\"../../../typings/jquery/jquery.d.ts\" />\n/// <reference path=\"../../Service/Adapter/Exalead.ts\" />\n/// <reference path=\"../../Service/ServiceManager.ts\" />\n/// <reference path=\"../../Plugin/AbstractPlugin.ts\" />\n/// <reference path=\"../../Component/Form/Element/Form.ts\" />\n/// <reference path=\"../../I18n/Translator.ts\" />\n/// <reference path=\"../../Core/Ajax/AutoComplete.ts\" />\n\n\ninterface Document {\n    registerElement(tagName:string, implementation:any):any;\n}\n\ninterface JQuery {\n    masonry(data?:any, options?:any): JQuery;\n    chosen(data?:any, options?:any): JQuery;\n    imagesLoaded(data?:any, options?:any): JQuery;\n    always(data?:any, options?:any): JQuery;\n    done(data?:any, options?:any): JQuery;\n    fail(data?:any, options?:any): JQuery;\n    progress(data?:any, options?:any): JQuery;\n}\n\nnamespace Com.Threeds.Component.LandingPage {\n\n    import AbstractPlugin = Com.Threeds.Plugin.AbstractPlugin;\n    import Form = Com.Threeds.Component.Form.Element.Form;\n\n    export class Plugin extends AbstractPlugin {\n\n        public settings:any = {\n            id: 'LDP6312',\n            type: 'download',\n            steps: {\n                0: {\n                    //name: '1',\n                    title: 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua',\n                    button: 'Submit'\n                },\n                1: {\n                    //name: '2',\n                    title: 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua',\n                    button: 'download'\n                },\n            },\n            thankyou: {\n                title: 'Step 1',\n                content: 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua',\n            },\n            error: {\n                title: 'Step 1',\n                content: 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua'\n            },\n            api: {\n                adapter: 'Com.Threeds.Service.Adapter.Neolane',\n                url: 'http://dassault-test.neolane.net/dsx/lp_api.jssp',\n            },\n            callback: {\n                success: undefined\n            }\n        };\n\n        constructor(elem:any, options:Object) {\n            super(elem, options);\n            this.settings = $.extend({}, this.settings, options);\n            this.service('api').form(this, {});\n        }\n\n        render(type:string, data:any):void {\n            if (typeof this.settings.hook.render == 'function') {\n                this.settings.hook.render(this, type, data);\n            } else {\n                this.elem.append(Form.create(this, data));\n            }\n        }\n    }\n\n    $.namespace('threeds', {\n        landingPage: function (options:Object) {\n            return new Plugin(this, options);\n        }\n    });\n}\n","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Service;\n        (function (Service) {\n            var Adapter;\n            (function (Adapter) {\n                var AbstractAdapter = Com.Threeds.Service.Adapter.AbstractAdapter;\n                var Neolane = (function (_super) {\n                    __extends(Neolane, _super);\n                    function Neolane() {\n                        _super.apply(this, arguments);\n                    }\n                    Neolane.prototype.form = function (context, options) {\n                        var self = this;\n                        $.ajax({\n                            type: \"GET\", dataType: \"json\", url: 'data/form/AutoComplete.json',\n                            success: function (response) {\n                                context.render('form', self.data(response));\n                            },\n                            error: function (resultat, statut, erreur) {\n                                context.render('form', false);\n                            }\n                        });\n                    };\n                    Neolane.prototype.post = function (context, data) {\n                        var self = this;\n                        data['lpid'] = context.settings.id;\n                        $.ajax({\n                            type: \"POST\",\n                            dataType: \"jsonp\",\n                            url: context.settings.form.url,\n                            data: data,\n                            success: function (response) {\n                                console.log(response);\n                                context.render('form', self.data(response));\n                            },\n                            error: function (resultat, statut, erreur) {\n                                context.render('form', false);\n                            }\n                        });\n                    };\n                    Neolane.prototype.customerAutocomplete = function (context, data) {\n                        $.ajax({\n                            url: 'http://dassault-test.neolane.net/dsx/dnbWebservice.jssp',\n                            dataType: 'jsonp',\n                            data: {\n                                query: 'lorem',\n                                iso: 'fr'\n                            },\n                            success: function (data) {\n                                context.render(context, data);\n                            },\n                        });\n                    };\n                    Neolane.prototype.data = function (reponse) {\n                        if (typeof reponse.result != 'undefined' && typeof reponse.result.config != 'undefined') {\n                            this.clean(reponse.result.config);\n                        }\n                        if (typeof reponse.result != 'undefined' && typeof reponse.result.config != 'undefined' && typeof reponse.result.data != 'undefined') {\n                            this.hydrate(reponse.result.config, reponse.result.data);\n                        }\n                        return reponse;\n                    };\n                    Neolane.prototype.clean = function (data) {\n                        for (var i = 0; i < data.length; i++) {\n                            if (typeof data[i].type != 'undefined' && data[i].type == 'picklist') {\n                                data[i].type = 'select';\n                            }\n                            else if (typeof data[i].type != 'undefined' && data[i].type == 'string') {\n                                data[i].type = 'text';\n                            }\n                            else if (typeof data[i].type != 'undefined' && data[i].type == 'fieldgroup') {\n                                this.clean(data[i].items);\n                            }\n                        }\n                    };\n                    Neolane.prototype.hydrate = function (data, values) {\n                        for (var i = 0; i < data.length; i++) {\n                            if (typeof data[i].name != 'undefined' && values[data[i].name] != 'undefined') {\n                                data[i].value = values[data[i].name];\n                            }\n                            else if (typeof data[i].type != 'undefined' && data[i].type == 'fieldgroup') {\n                                this.hydrate(data[i].items, values);\n                            }\n                        }\n                    };\n                    return Neolane;\n                }(AbstractAdapter));\n                Adapter.Neolane = Neolane;\n            })(Adapter = Service.Adapter || (Service.Adapter = {}));\n        })(Service = Threeds.Service || (Threeds.Service = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\n","/// <reference path=\"../../../typings/jquery/jquery.d.ts\" />\n/// <reference path=\"../../Service/Adapter/AbstractAdapter.ts\" />\n\n\nnamespace Com.Threeds.Service.Adapter {\n\n    import AbstractAdapter = Com.Threeds.Service.Adapter.AbstractAdapter;\n\n    interface Map<T> {\n        [K: string]: T;\n    }\n\n    export class Neolane extends AbstractAdapter {\n\n\n        public form(context:any, options:any):void {\n            let self:any = this;\n            $.ajax({\n                //type: \"GET\",dataType: \"jsonp\",url: context.settings.form.url, data: {op: 'GetFormJson',lpid: context.settings.id},\n                //type: \"GET\",dataType: \"json\", url: 'data/form/LandingPageAPI-GetFormJson-error-v2.json',\n                //type: \"GET\",dataType: \"json\", url: 'data/form/LandingPageAPI-GetFormJson-available-step1-v2.json',\n                //type: \"GET\",dataType: \"json\", url: 'data/form/LandingPageAPI-GetFormJson-available-step2-v2.json',\n                type: \"GET\",dataType: \"json\", url: 'data/form/AutoComplete.json',\n               // type: \"GET\",dataType: \"json\", url: 'data/form/LandingPageAPI-GetFormJson-available-step1-v3.json',\n                //type: \"GET\",dataType: \"json\", url: 'data/form/LandingPageAPI-GetFormJson-notavailable-displaymessage.json',\n                //type: \"GET\",dataType: \"json\", url: 'data/form/LandingPageAPI-GetFormJson-notavailable-redirection.json',\n                //type: \"GET\",dataType: \"json\", url: 'data/form/LandingPageAPI-SubmitForm-success-v2.json',\n                success: function (response:any) {\n                    context.render('form', self.data(response));\n                },\n                error: function (resultat:any, statut:any, erreur:any) {\n                    context.render('form', false);\n                }\n            });\n        }\n\n        public post(context:any, data:any):void {\n            let self:any = this;\n\n            data['lpid'] = context.settings.id;\n\n            $.ajax({\n                type: \"POST\",\n                dataType: \"jsonp\",\n                url: context.settings.form.url,\n                //data: data,\n                data:data,\n                //dataType: \"jsonp\",url: `${options.url}search-api/search?q=${query}&applicationId=default&b=${offset}&hf=${limit}&d=all&output_format=json`,\n                //dataType: \"json\", url: 'data/form/LandingPageAPI-SubmitForm-error-v2.json',\n                success: function (response:any) {\n                    console.log(response);\n                    context.render('form', self.data(response));\n                },\n                error: function (resultat:any, statut:any, erreur:any) {\n                    context.render('form', false);\n                }\n            });\n        }\n\n\n\n        public customerAutocomplete(context:Object, data:any):void {\n            $.ajax({\n                url: 'http://dassault-test.neolane.net/dsx/dnbWebservice.jssp',\n                dataType: 'jsonp',\n                data: {\n                    query: 'lorem',\n                    iso: 'fr'\n                },\n                success: function (data) {\n                    context.render(context, data);\n                },\n\n            });\n        }\n\n        public data(reponse:any):any {\n            if (typeof reponse.result != 'undefined' && typeof reponse.result.config != 'undefined') {\n                this.clean(reponse.result.config);\n            }\n\n            if (typeof reponse.result != 'undefined' && typeof reponse.result.config != 'undefined' && typeof reponse.result.data != 'undefined') {\n                this.hydrate(reponse.result.config, reponse.result.data);\n            }\n\n            return reponse;\n        }\n\n        public clean(data:any):any {\n            for (let i = 0; i < data.length; i++) {\n                if (typeof data[i].type != 'undefined' && data[i].type == 'picklist') {\n                    data[i].type = 'select';\n                } else if (typeof data[i].type != 'undefined' && data[i].type == 'string') {\n                    data[i].type = 'text';\n                } else if (typeof data[i].type != 'undefined' && data[i].type == 'fieldgroup') {\n                    this.clean(data[i].items);\n                }\n            }\n        }\n\n        public hydrate(data:any, values:any):any {\n            for (let i = 0; i < data.length; i++) {\n                if (typeof data[i].name != 'undefined' && values[data[i].name] != 'undefined') {\n                    data[i].value = values[data[i].name];\n                } else if (typeof data[i].type != 'undefined' && data[i].type == 'fieldgroup') {\n                    this.hydrate(data[i].items, values);\n                }\n\n            }\n        }\n\n    }\n}\n","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Com;\n(function (Com) {\n    var Threeds;\n    (function (Threeds) {\n        var Component;\n        (function (Component) {\n            var Form;\n            (function (Form) {\n                var Element;\n                (function (Element) {\n                    var AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n                    var Option = (function (_super) {\n                        __extends(Option, _super);\n                        function Option(data) {\n                            _super.call(this, data);\n                            if (data.label != undefined)\n                                this.label = data.label;\n                            if (data.value != undefined)\n                                this.value = data.value;\n                            if (data.selected != undefined)\n                                this.selected = data.selected;\n                        }\n                        Option.prototype.labelChanged = function (newValue, oldValue) {\n                            this.innerText = newValue;\n                        };\n                        Option.prototype.ready = function () {\n                        };\n                        __decorate([\n                            property({ type: String, reflectToAttribute: true })\n                        ], Option.prototype, \"label\", void 0);\n                        __decorate([\n                            property({ type: String, reflectToAttribute: true })\n                        ], Option.prototype, \"value\", void 0);\n                        __decorate([\n                            property({ type: Boolean, reflectToAttribute: true })\n                        ], Option.prototype, \"selected\", void 0);\n                        __decorate([\n                            observe(\"label\")\n                        ], Option.prototype, \"labelChanged\", null);\n                        Option = __decorate([\n                            component('option-element'),\n                            extend(\"option\")\n                        ], Option);\n                        return Option;\n                    }(AbstractPolymerElement));\n                    Element.Option = Option;\n                })(Element = Form.Element || (Form.Element = {}));\n            })(Form = Component.Form || (Component.Form = {}));\n        })(Component = Threeds.Component || (Threeds.Component = {}));\n    })(Threeds = Com.Threeds || (Com.Threeds = {}));\n})(Com || (Com = {}));\nCom.Threeds.Component.Form.Element.Option.register();\n","/// <reference path=\"../../../../bower_components/polymer-ts/polymer-ts.d.ts\"/>\n/// <reference path=\"../../../Element/AbstractPolymerElement.ts\" />\n\nnamespace Com.Threeds.Component.Form.Element {\n\n    import AbstractPolymerElement = Com.Threeds.Element.AbstractPolymerElement;\n\n    @component('option-element')\n    @extend(\"option\")\n    export class Option extends AbstractPolymerElement {\n        @property({type: String, reflectToAttribute: true})\n            label:string;\n\n        @property({type: String, reflectToAttribute: true})\n            value:string;\n\n        @property({type: Boolean, reflectToAttribute: true})\n            selected:boolean;\n\n        constructor(data:any) {\n            super(data);\n            if (data.label != undefined) this.label = data.label;\n            if (data.value != undefined) this.value = data.value;\n            if (data.selected != undefined) this.selected = data.selected;\n        }\n\n        @observe(\"label\")\n        labelChanged(newValue:string, oldValue:string) {\n            this.innerText = newValue;\n        }\n\n        ready() {\n        }\n    }\n}\n\nCom.Threeds.Component.Form.Element.Option.register();\n"],"sourceRoot":"/source/"}